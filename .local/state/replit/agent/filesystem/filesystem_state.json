{"file_contents":{"client/src/pages/home.tsx":{"content":"import { useEffect } from \"react\";\nimport { Link, useLocation } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { CampaignProgress } from \"@/components/campaign-progress\";\nimport { DonationPathwayCard } from \"@/components/donation-pathway-card\";\nimport { BuilderTierCard } from \"@/components/builder-tier-card\";\nimport { StatsSection } from \"@/components/stats-section\";\nimport { ImpactStoryCard } from \"@/components/impact-story-card\";\nimport { FAQSection } from \"@/components/faq-section\";\nimport { ContactForm } from \"@/components/contact-form\";\nimport { ArrowRight, Target, Users, Sparkles, TrendingUp } from \"lucide-react\";\nimport { useCampaignStats } from \"@/hooks/use-campaign-stats\";\nimport { useToast } from \"@/hooks/use-toast\";\n\nexport default function Home() {\n  const [location] = useLocation();\n  const { toast } = useToast();\n  const { data: campaignStats } = useCampaignStats();\n\n  // Handle payment success/failure notifications\n  useEffect(() => {\n    const hash = window.location.hash;\n    const searchIndex = hash.indexOf('?');\n    const search = searchIndex >= 0 ? hash.substring(searchIndex) : '';\n    const params = new URLSearchParams(search);\n    const paymentStatus = params.get('payment');\n    \n    if (paymentStatus === 'success') {\n      toast({\n        title: \"Donation Successful!\",\n        description: \"Thank you for your generous contribution to the JENGE Impact Fund. You'll receive a confirmation email shortly.\",\n      });\n      window.location.hash = '/';\n    } else if (paymentStatus === 'failed') {\n      toast({\n        title: \"Payment Failed\",\n        description: \"There was an issue processing your payment. Please try again or contact support.\",\n        variant: \"destructive\",\n      });\n      window.location.hash = '/';\n    }\n  }, [location, toast]);\n\n  // Use API data or fallback to default\n  const campaignData = {\n    pledged: campaignStats?.pledged || 1520000,\n    goal: campaignStats?.goal || 20000000,\n    builders: campaignStats?.builders || 25,\n    deadline: campaignStats?.deadline ? new Date(campaignStats.deadline) : new Date('2027-12-31'),\n  };\n\n  const donationPathways = [\n    {\n      title: \"Become a Builder\",\n      description: \"Join our long-term campaign by making an annual pledge for 15 years to help build the KES 1.2 billion endowment.\",\n      imageUrl: \"https://images.unsplash.com/photo-1552664730-d307ca884978?w=800&q=80\",\n      commitment: {\n        minimumContribution: \"KES 1,000/year\",\n        timeCommitment: \"15 Years\",\n      },\n      benefits: [\n        \"Contribute to building a sustainable endowment\",\n        \"Receive quarterly impact updates\",\n        \"Recognition as a Builder in our community\",\n      ],\n      ctaText: \"Join the Builders\",\n      ctaLink: \"/donate?type=builder\",\n      featured: true,\n    },\n    {\n      title: \"Fund a Program\",\n      description: \"Make a one-time contribution towards a specific program implemented by JENGE Kulture.\",\n      imageUrl: \"https://images.unsplash.com/photo-1522071820081-009f0129c71c?w=800&q=80\",\n      commitment: {\n        minimumContribution: \"No minimum\",\n        timeCommitment: \"One-time\",\n      },\n      benefits: [\n        \"Direct impact on specific initiatives\",\n        \"Choose your program focus area\",\n        \"Receive program updates\",\n      ],\n      ctaText: \"Fund a Program\",\n      ctaLink: \"/donate?type=program\",\n    },\n    {\n      title: \"Partner With Us\",\n      description: \"Collaborate with us as a corporate or institutional partner in support of the JENGE Impact Fund.\",\n      imageUrl: \"https://images.unsplash.com/photo-1600880292203-757bb62b4baf?w=800&q=80\",\n      commitment: {\n        minimumContribution: \"Custom\",\n        timeCommitment: \"Flexible\",\n      },\n      benefits: [\n        \"Strategic partnership opportunities\",\n        \"Co-create impact initiatives\",\n        \"Brand alignment with youth empowerment\",\n      ],\n      ctaText: \"Explore Partnership\",\n      ctaLink: \"/donate?type=partner\",\n    },\n  ];\n\n  const impactStories = [\n    {\n      title: \"Nairobi Creative Collective: 50 Artists Find Sustainable Income\",\n      excerpt: \"Through solidarity-driven support, this collective of young artists in Nairobi secured workshop space, equipment, and market access, leading to sustainable livelihoods for all members.\",\n      imageUrl: \"https://images.unsplash.com/photo-1460661419201-fd4cecdf8a8b?w=800&q=80\",\n    },\n    {\n      title: \"Youth Cooperative Transforms Kisumu's Fashion Scene\",\n      excerpt: \"Twenty young fashion designers pooled resources to create a shared production facility, reducing costs and increasing market reach. They now export to three countries.\",\n      imageUrl: \"https://images.unsplash.com/photo-1558618666-fcd25c85cd64?w=800&q=80\",\n    },\n    {\n      title: \"Digital Creators Hub Supports 100+ Young Professionals\",\n      excerpt: \"A solidarity enterprise in Mombasa provides shared resources, training, and collaborative opportunities for young digital creators, videographers, and content producers.\",\n      imageUrl: \"https://images.unsplash.com/photo-1557425493-6f90ae4659fc?w=800&q=80\",\n    },\n  ];\n\n  return (\n    <div className=\"min-h-screen\">\n      {/* Hero Section */}\n      <section className=\"relative min-h-[600px] md:min-h-[700px] flex items-center justify-center overflow-hidden\">\n        {/* Background Image with Overlay */}\n        <div className=\"absolute inset-0 z-0\">\n          <img\n            src=\"https://images.unsplash.com/photo-1529070538774-1843cb3265df?w=1920&q=80\"\n            alt=\"Kenyan youth collaboration\"\n            className=\"w-full h-full object-cover\"\n          />\n          <div className=\"absolute inset-0 bg-gradient-to-r from-black/70 to-black/50\" />\n        </div>\n\n        {/* Hero Content */}\n        <div className=\"relative z-10 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-20 md:py-32\">\n          <div className=\"max-w-3xl\">\n            <h1 className=\"text-4xl md:text-5xl lg:text-6xl font-serif font-bold text-white mb-6 leading-tight\">\n              With your support, we can help{\" \"}\n              <span className=\"text-chart-3\">500,000 youth</span> achieve sustainable income by 2040\n            </h1>\n            <p className=\"text-lg md:text-xl text-gray-200 mb-8 leading-relaxed\">\n              Join the WE BUILD campaign to create a KES 1.2 billion endowment fund supporting solidarity-driven enterprises in Kenya's creative economy.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4\">\n              <Link href=\"/about\">\n                <Button size=\"lg\" variant=\"outline\" className=\"bg-white/10 backdrop-blur-sm border-white/20 text-white hover:bg-white/20\" data-testid=\"button-hero-learn-more\">\n                  Learn More\n                  <ArrowRight className=\"ml-2 h-5 w-5\" />\n                </Button>\n              </Link>\n              <Link href=\"/donate\">\n                <Button size=\"lg\" variant=\"default\" data-testid=\"button-hero-get-started\">\n                  Get Started\n                </Button>\n              </Link>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Campaign Progress */}\n      <section className=\"py-12 md:py-16 bg-background\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <CampaignProgress {...campaignData} />\n        </div>\n      </section>\n\n      {/* Donation Pathways */}\n      <section className=\"py-16 md:py-24 bg-accent/30\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl md:text-4xl font-serif font-bold mb-4\">\n              Choose Your Giving Journey\n            </h2>\n            <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n              Your contribution helps unlock economic opportunities for young people across Kenya\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {donationPathways.map((pathway, index) => (\n              <DonationPathwayCard key={index} {...pathway} />\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Statistics Section */}\n      <StatsSection />\n\n      {/* Builder Tiers */}\n      <section className=\"py-16 md:py-24 bg-background\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl md:text-4xl font-serif font-bold mb-4\">\n              The \"WE BUILD\" Campaign\n            </h2>\n            <p className=\"text-lg text-muted-foreground max-w-3xl mx-auto\">\n              Choose a builder tier and commit to annual donations for 15 years. Together, we'll build a KES 1.2 billion endowment supporting 500,000 youth.\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-12\">\n            <BuilderTierCard tierKey=\"palladium\" />\n            <BuilderTierCard tierKey=\"platinum\" />\n            <BuilderTierCard tierKey=\"gold\" />\n            <BuilderTierCard tierKey=\"diamond\" />\n            <BuilderTierCard tierKey=\"silver\" />\n            <BuilderTierCard tierKey=\"bronze\" />\n          </div>\n\n          <div className=\"text-center\">\n            <p className=\"text-sm text-muted-foreground mb-4\">\n              We're mobilizing 55,000 builders to create lasting socio-economic impact\n            </p>\n            <Link href=\"/donate\">\n              <Button size=\"lg\" data-testid=\"button-view-all-tiers\">\n                View All Tiers & Donate\n              </Button>\n            </Link>\n          </div>\n        </div>\n      </section>\n\n      {/* SESS Model */}\n      <section className=\"py-16 md:py-24 bg-accent/30\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl md:text-4xl font-serif font-bold mb-4\">\n              Solidarity & Cooperation - An Alternative Model\n            </h2>\n            <p className=\"text-lg text-muted-foreground max-w-3xl mx-auto\">\n              JENGE Impact Fund leverages the SESS Impact Model to achieve sustainable and scalable socio-economic impact\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n            <div className=\"bg-card p-6 rounded-lg hover-elevate transition-all\">\n              <div className=\"w-12 h-12 bg-primary/10 rounded-full flex items-center justify-center mb-4\">\n                <Users className=\"h-6 w-6 text-primary\" />\n              </div>\n              <h3 className=\"text-xl font-semibold mb-2\">Solidarity</h3>\n              <p className=\"text-sm text-muted-foreground\">\n                Building collective strength through shared purpose and mutual support among youth enterprises\n              </p>\n            </div>\n\n            <div className=\"bg-card p-6 rounded-lg hover-elevate transition-all\">\n              <div className=\"w-12 h-12 bg-primary/10 rounded-full flex items-center justify-center mb-4\">\n                <Target className=\"h-6 w-6 text-primary\" />\n              </div>\n              <h3 className=\"text-xl font-semibold mb-2\">Enterprise</h3>\n              <p className=\"text-sm text-muted-foreground\">\n                Supporting cooperatives and solidarity-driven businesses that create sustainable livelihoods\n              </p>\n            </div>\n\n            <div className=\"bg-card p-6 rounded-lg hover-elevate transition-all\">\n              <div className=\"w-12 h-12 bg-primary/10 rounded-full flex items-center justify-center mb-4\">\n                <Sparkles className=\"h-6 w-6 text-primary\" />\n              </div>\n              <h3 className=\"text-xl font-semibold mb-2\">Sustainability</h3>\n              <p className=\"text-sm text-muted-foreground\">\n                Ensuring long-term impact through endowment-based funding and scalable solutions\n              </p>\n            </div>\n\n            <div className=\"bg-card p-6 rounded-lg hover-elevate transition-all\">\n              <div className=\"w-12 h-12 bg-primary/10 rounded-full flex items-center justify-center mb-4\">\n                <TrendingUp className=\"h-6 w-6 text-primary\" />\n              </div>\n              <h3 className=\"text-xl font-semibold mb-2\">Systems</h3>\n              <p className=\"text-sm text-muted-foreground\">\n                Creating interconnected support systems that amplify impact across communities\n              </p>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Impact Stories */}\n      <section className=\"py-16 md:py-24 bg-background\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl md:text-4xl font-serif font-bold mb-4\">\n              Stories of Solidarity & Cooperation\n            </h2>\n            <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n              See how collective action is transforming lives across Kenya's creative economy\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {impactStories.map((story, index) => (\n              <ImpactStoryCard key={index} {...story} />\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* FAQ Section */}\n      <FAQSection />\n\n      {/* Contact Form */}\n      <section className=\"py-16 md:py-24 bg-accent/30\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl md:text-4xl font-serif font-bold mb-4\">\n              Get in Touch\n            </h2>\n            <p className=\"text-lg text-muted-foreground\">\n              Complete the form below and our team will contact you within 48 hours\n            </p>\n          </div>\n\n          <div className=\"bg-card p-6 md:p-8 rounded-lg border\">\n            <ContactForm />\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n","size_bytes":14058},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { insertDonationSchema, insertBuilderPledgeSchema, insertInquirySchema, builderTiers } from \"@shared/schema\";\n\nconst PAYSTACK_SECRET_KEY = process.env.PAYSTACK_SECRET_KEY || '';\nconst PAYSTACK_BASE_URL = 'https://api.paystack.co';\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Initialize Paystack payment\n  app.post(\"/api/donations/initialize\", async (req, res) => {\n    try {\n      if (!PAYSTACK_SECRET_KEY) {\n        return res.status(500).json({\n          success: false,\n          message: 'Payment service is not configured. Please contact support.',\n        });\n      }\n\n      const validatedData = insertDonationSchema.parse(req.body);\n      \n      // Create donation record\n      const donation = await storage.createDonation({\n        ...validatedData,\n        status: 'pending',\n      });\n\n      // Calculate amount in kobo (Paystack uses smallest currency unit)\n      const amountInKobo = validatedData.amount * 100;\n\n      // Generate unique reference\n      const reference = `JENGE_${donation.id}_${Date.now()}`;\n\n      // Initialize Paystack transaction\n      const paystackResponse = await fetch(\n        `${PAYSTACK_BASE_URL}/transaction/initialize`,\n        {\n          method: 'POST',\n          headers: {\n            Authorization: `Bearer ${PAYSTACK_SECRET_KEY}`,\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            email: validatedData.donorEmail,\n            amount: amountInKobo,\n            reference,\n            callback_url: `${process.env.REPLIT_DEV_DOMAIN || 'http://localhost:5000'}/api/donations/verify`,\n            metadata: {\n              donationId: donation.id,\n              donorName: validatedData.donorName,\n              donationType: validatedData.donationType,\n              builderTier: validatedData.builderTier,\n              isRecurring: validatedData.isRecurring,\n            },\n          }),\n        }\n      );\n\n      if (!paystackResponse.ok) {\n        throw new Error(`Paystack API error: ${paystackResponse.statusText}`);\n      }\n\n      const paystackData = await paystackResponse.json();\n\n      // Update donation with Paystack reference (fix: don't create twice, update existing)\n      const updatedDonation = await storage.updateDonationReference(donation.id, reference);\n\n      res.json({\n        success: true,\n        donationId: updatedDonation.id,\n        authorizationUrl: paystackData.data.authorization_url,\n        reference: reference,\n      });\n    } catch (error: any) {\n      console.error('Payment initialization error:', error.message);\n      res.status(500).json({\n        success: false,\n        message: error.message || 'Error initializing payment',\n      });\n    }\n  });\n\n  // Verify Paystack payment\n  app.get(\"/api/donations/verify\", async (req, res) => {\n    try {\n      if (!PAYSTACK_SECRET_KEY) {\n        return res.redirect('/?payment=failed');\n      }\n\n      const { reference } = req.query;\n\n      if (!reference || typeof reference !== 'string') {\n        return res.redirect('/?payment=failed');\n      }\n\n      // Verify transaction with Paystack\n      const paystackResponse = await fetch(\n        `${PAYSTACK_BASE_URL}/transaction/verify/${reference}`,\n        {\n          headers: {\n            Authorization: `Bearer ${PAYSTACK_SECRET_KEY}`,\n          },\n        }\n      );\n\n      if (!paystackResponse.ok) {\n        throw new Error(`Paystack verification error: ${paystackResponse.statusText}`);\n      }\n\n      const paystackData = await paystackResponse.json();\n      const { status, metadata } = paystackData.data;\n\n      // Find donation by reference\n      const donation = await storage.getDonationByReference(reference);\n\n      if (!donation) {\n        return res.redirect('/?payment=failed');\n      }\n\n      if (status === 'success') {\n        // Update donation status\n        await storage.updateDonationStatus(donation.id, 'success');\n\n        // If it's a builder pledge, create the pledge record\n        if (metadata.isRecurring && metadata.builderTier) {\n          const tier = builderTiers[metadata.builderTier as keyof typeof builderTiers];\n          await storage.createBuilderPledge({\n            donorName: metadata.donorName,\n            donorEmail: donation.donorEmail,\n            builderTier: metadata.builderTier,\n            annualAmount: tier.annualAmount,\n            yearsCommitted: 15,\n            totalPledged: tier.annualAmount * 15,\n            paystackReference: reference,\n          });\n        }\n\n        return res.redirect('/?payment=success');\n      } else {\n        await storage.updateDonationStatus(donation.id, 'failed');\n        return res.redirect('/?payment=failed');\n      }\n    } catch (error: any) {\n      console.error('Payment verification error:', error.message);\n      res.redirect('/?payment=failed');\n    }\n  });\n\n  // Get campaign statistics\n  app.get(\"/api/campaign/stats\", async (_req, res) => {\n    try {\n      const stats = await storage.getDonationStats();\n      \n      // Add campaign goal and deadline\n      const campaignData = {\n        pledged: stats.pledged + 1520000, // Add initial pledged amount\n        goal: 20000000, // Milestone 1 goal\n        builders: stats.builders + 25, // Add initial builders\n        deadline: new Date('2027-12-31').toISOString(),\n      };\n\n      res.json(campaignData);\n    } catch (error: any) {\n      res.status(500).json({ message: 'Error fetching campaign stats' });\n    }\n  });\n\n  // Get all donations (for admin purposes)\n  app.get(\"/api/donations\", async (_req, res) => {\n    try {\n      const donations = await storage.getAllDonations();\n      res.json(donations);\n    } catch (error: any) {\n      res.status(500).json({ message: 'Error fetching donations' });\n    }\n  });\n\n  // Create inquiry\n  app.post(\"/api/inquiries\", async (req, res) => {\n    try {\n      const validatedData = insertInquirySchema.parse(req.body);\n      const inquiry = await storage.createInquiry(validatedData);\n      res.json({ success: true, inquiry });\n    } catch (error: any) {\n      res.status(400).json({ message: 'Invalid inquiry data', error: error.message });\n    }\n  });\n\n  // Get all inquiries\n  app.get(\"/api/inquiries\", async (_req, res) => {\n    try {\n      const inquiries = await storage.getAllInquiries();\n      res.json(inquiries);\n    } catch (error: any) {\n      res.status(500).json({ message: 'Error fetching inquiries' });\n    }\n  });\n\n  // Get all builder pledges\n  app.get(\"/api/builder-pledges\", async (_req, res) => {\n    try {\n      const pledges = await storage.getAllBuilderPledges();\n      res.json(pledges);\n    } catch (error: any) {\n      res.status(500).json({ message: 'Error fetching builder pledges' });\n    }\n  });\n\n  // Get all stories\n  app.get(\"/api/stories\", async (_req, res) => {\n    try {\n      const stories = await storage.getAllStories();\n      res.json(stories);\n    } catch (error: any) {\n      res.status(500).json({ message: 'Error fetching stories' });\n    }\n  });\n\n  const httpServer = createServer(app);\n  return httpServer;\n}\n","size_bytes":7171},"client/src/components/contact-form.tsx":{"content":"import { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { z } from \"zod\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { Loader2 } from \"lucide-react\";\n\nconst formSchema = z.object({\n  firstName: z.string().min(2, \"First name must be at least 2 characters\"),\n  lastName: z.string().min(2, \"Last name must be at least 2 characters\"),\n  email: z.string().email(\"Invalid email address\"),\n  inquiryType: z.string(),\n  message: z.string().min(10, \"Message must be at least 10 characters\"),\n});\n\ntype FormData = z.infer<typeof formSchema>;\n\nexport function ContactForm() {\n  const { toast } = useToast();\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  const form = useForm<FormData>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      inquiryType: \"general\",\n      message: \"\",\n    },\n  });\n\n  const mutation = useMutation({\n    mutationFn: async (data: FormData) => {\n      const response = await fetch(\"https://formspree.io/f/xdkovyej\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          name: `${data.firstName} ${data.lastName}`,\n          email: data.email,\n          inquiry_type: data.inquiryType,\n          message: data.message,\n        }),\n      });\n      if (!response.ok) throw new Error(\"Failed to submit inquiry\");\n      return response.json();\n    },\n    onSuccess: () => {\n      setIsSubmitted(true);\n      form.reset();\n      toast({\n        title: \"Inquiry Submitted\",\n        description: \"Thank you for your interest. Our team will contact you within 48 hours.\",\n      });\n    },\n    onError: () => {\n      toast({\n        title: \"Submission Failed\",\n        description: \"There was an error submitting your inquiry. Please try again.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const onSubmit = (data: FormData) => {\n    mutation.mutate(data);\n  };\n\n  if (isSubmitted) {\n    return (\n      <div className=\"text-center py-12 bg-accent/30 rounded-lg\">\n        <div className=\"w-16 h-16 bg-primary/10 rounded-full flex items-center justify-center mx-auto mb-4\">\n          <svg className=\"w-8 h-8 text-primary\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\n          </svg>\n        </div>\n        <h3 className=\"text-2xl font-serif font-bold mb-2\">Inquiry Submitted!</h3>\n        <p className=\"text-muted-foreground mb-6\">\n          Thank you for your interest. Our team will be reaching out shortly.\n        </p>\n        <Button onClick={() => setIsSubmitted(false)} variant=\"outline\">\n          Submit Another Inquiry\n        </Button>\n      </div>\n    );\n  }\n\n  return (\n    <Form {...form}>\n      <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <FormField\n            control={form.control}\n            name=\"firstName\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>First Name</FormLabel>\n                <FormControl>\n                  <Input placeholder=\"John\" {...field} data-testid=\"input-first-name\" />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n\n          <FormField\n            control={form.control}\n            name=\"lastName\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Last Name</FormLabel>\n                <FormControl>\n                  <Input placeholder=\"Doe\" {...field} data-testid=\"input-last-name\" />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n        </div>\n\n        <FormField\n          control={form.control}\n          name=\"email\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Email Address</FormLabel>\n              <FormControl>\n                <Input type=\"email\" placeholder=\"john@example.com\" {...field} data-testid=\"input-email\" />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"inquiryType\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Inquiry Type</FormLabel>\n              <Select onValueChange={field.onChange} defaultValue={field.value}>\n                <FormControl>\n                  <SelectTrigger data-testid=\"select-inquiry-type\">\n                    <SelectValue placeholder=\"Select inquiry type\" />\n                  </SelectTrigger>\n                </FormControl>\n                <SelectContent>\n                  <SelectItem value=\"general\">General Inquiry</SelectItem>\n                  <SelectItem value=\"builder\">Become a Builder</SelectItem>\n                  <SelectItem value=\"partnership\">Partnership Opportunity</SelectItem>\n                  <SelectItem value=\"program\">Program Information</SelectItem>\n                </SelectContent>\n              </Select>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <FormField\n          control={form.control}\n          name=\"message\"\n          render={({ field }) => (\n            <FormItem>\n              <FormLabel>Message</FormLabel>\n              <FormControl>\n                <Textarea\n                  placeholder=\"Tell us about your inquiry...\"\n                  className=\"min-h-[120px] resize-none\"\n                  {...field}\n                  data-testid=\"textarea-message\"\n                />\n              </FormControl>\n              <FormMessage />\n            </FormItem>\n          )}\n        />\n\n        <Button\n          type=\"submit\"\n          className=\"w-full md:w-auto\"\n          disabled={mutation.isPending}\n          data-testid=\"button-submit-inquiry\"\n        >\n          {mutation.isPending && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n          {mutation.isPending ? \"Submitting...\" : \"Submit Inquiry\"}\n        </Button>\n      </form>\n    </Form>\n  );\n}\n","size_bytes":6751},"client/src/index.css":{"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n/* LIGHT MODE */\n:root {\n  --button-outline: rgba(0,0,0, .10);\n  --badge-outline: rgba(0,0,0, .05);\n\n  /* Automatic computation of border around primary / danger buttons */\n  --opaque-button-border-intensity: -8; /* In terms of percentages */\n\n  /* Backgrounds applied on top of other backgrounds when hovered/active */\n  --elevate-1: rgba(0,0,0, .03);\n  --elevate-2: rgba(0,0,0, .08);\n\n  --background: 0 0% 98%;\n\n  --foreground: 0 0% 10%;\n\n  --border: 0 0% 88%;\n\n  --card: 0 0% 96%;\n\n  --card-foreground: 0 0% 10%;\n\n  --card-border: 0 0% 90%;\n\n  --sidebar: 0 0% 94%;\n\n  --sidebar-foreground: 0 0% 10%;\n\n  --sidebar-border: 0 0% 86%;\n\n  --sidebar-primary: 145 40% 25%;\n\n  --sidebar-primary-foreground: 145 10% 98%;\n\n  --sidebar-accent: 145 8% 86%;\n\n  --sidebar-accent-foreground: 145 40% 15%;\n\n  --sidebar-ring: 145 40% 25%;\n\n  --popover: 0 0% 92%;\n\n  --popover-foreground: 0 0% 10%;\n\n  --popover-border: 0 0% 84%;\n\n  --primary: 145 40% 25%;\n\n  --primary-foreground: 145 10% 98%;\n\n  --secondary: 0 0% 88%;\n\n  --secondary-foreground: 0 0% 10%;\n\n  --muted: 0 3% 89%;\n\n  --muted-foreground: 0 0% 35%;\n\n  --accent: 145 6% 90%;\n\n  --accent-foreground: 145 40% 15%;\n\n  --destructive: 0 75% 45%;\n\n  --destructive-foreground: 0 10% 98%;\n\n  --input: 0 0% 70%;\n  --ring: 145 40% 25%;\n  --chart-1: 145 40% 25%;\n  --chart-2: 0 75% 45%;\n  --chart-3: 45 90% 55%;\n  --chart-4: 30 30% 35%;\n  --chart-5: 0 0% 35%;\n\n  --font-sans: Inter, Open Sans, sans-serif;\n  --font-serif: Playfair Display, Georgia, serif;\n  --font-mono: Menlo, monospace;\n  --radius: .5rem; /* 8px */\n  --shadow-2xs: 0px 2px 0px 0px hsl(0 0% 0% / 0.00);\n  --shadow-xs: 0px 2px 0px 0px hsl(0 0% 0% / 0.00);\n  --shadow-sm: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 1px 2px -1px hsl(0 0% 0% / 0.00);\n  --shadow: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 1px 2px -1px hsl(0 0% 0% / 0.00);\n  --shadow-md: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 2px 4px -1px hsl(0 0% 0% / 0.00);\n  --shadow-lg: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 4px 6px -1px hsl(0 0% 0% / 0.00);\n  --shadow-xl: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 8px 10px -1px hsl(0 0% 0% / 0.00);\n  --shadow-2xl: 0px 2px 0px 0px hsl(0 0% 0% / 0.00);\n  --tracking-normal: 0em;\n  --spacing: 0.25rem;\n\n  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */\n\n  /* Fallback for older browsers */\n  --sidebar-primary-border: hsl(var(--sidebar-primary));\n  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --sidebar-accent-border: hsl(var(--sidebar-accent));\n  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --primary-border: hsl(var(--primary));\n  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --secondary-border: hsl(var(--secondary));\n  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --muted-border: hsl(var(--muted));\n  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --accent-border: hsl(var(--accent));\n  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --destructive-border: hsl(var(--destructive));\n  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n}\n\n.dark {\n  --button-outline: rgba(255,255,255, .10);\n  --badge-outline: rgba(255,255,255, .05);\n\n  --opaque-button-border-intensity: 9;  /* In terms of percentages */\n\n  /* Backgrounds applied on top of other backgrounds when hovered/active */\n  --elevate-1: rgba(255,255,255, .04);\n  --elevate-2: rgba(255,255,255, .09);\n\n  --background: 0 0% 8%;\n\n  --foreground: 0 0% 95%;\n\n  --border: 0 0% 18%;\n\n  --card: 0 0% 12%;\n\n  --card-foreground: 0 0% 95%;\n\n  --card-border: 0 0% 16%;\n\n  --sidebar: 0 0% 10%;\n\n  --sidebar-foreground: 0 0% 95%;\n\n  --sidebar-border: 0 0% 14%;\n\n  --sidebar-primary: 145 40% 30%;\n\n  --sidebar-primary-foreground: 145 10% 98%;\n\n  --sidebar-accent: 145 8% 18%;\n\n  --sidebar-accent-foreground: 145 30% 85%;\n\n  --sidebar-ring: 145 40% 30%;\n\n  --popover: 0 0% 14%;\n\n  --popover-foreground: 0 0% 95%;\n\n  --popover-border: 0 0% 18%;\n\n  --primary: 145 40% 30%;\n\n  --primary-foreground: 145 10% 98%;\n\n  --secondary: 0 0% 18%;\n\n  --secondary-foreground: 0 0% 95%;\n\n  --muted: 0 3% 16%;\n\n  --muted-foreground: 0 0% 75%;\n\n  --accent: 145 6% 16%;\n\n  --accent-foreground: 145 30% 85%;\n\n  --destructive: 0 75% 40%;\n\n  --destructive-foreground: 0 10% 98%;\n\n  --input: 0 0% 30%;\n  --ring: 145 40% 30%;\n  --chart-1: 145 50% 65%;\n  --chart-2: 0 75% 65%;\n  --chart-3: 45 90% 65%;\n  --chart-4: 30 35% 60%;\n  --chart-5: 0 0% 70%;\n\n  --shadow-2xs: 0px 2px 0px 0px hsl(0 0% 0% / 0.00);\n  --shadow-xs: 0px 2px 0px 0px hsl(0 0% 0% / 0.00);\n  --shadow-sm: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 1px 2px -1px hsl(0 0% 0% / 0.00);\n  --shadow: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 1px 2px -1px hsl(0 0% 0% / 0.00);\n  --shadow-md: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 2px 4px -1px hsl(0 0% 0% / 0.00);\n  --shadow-lg: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 4px 6px -1px hsl(0 0% 0% / 0.00);\n  --shadow-xl: 0px 2px 0px 0px hsl(0 0% 0% / 0.00), 0px 8px 10px -1px hsl(0 0% 0% / 0.00);\n  --shadow-2xl: 0px 2px 0px 0px hsl(0 0% 0% / 0.00);\n\n  /* Fallback for older browsers */\n  --sidebar-primary-border: hsl(var(--sidebar-primary));\n  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --sidebar-accent-border: hsl(var(--sidebar-accent));\n  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --primary-border: hsl(var(--primary));\n  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --secondary-border: hsl(var(--secondary));\n  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --muted-border: hsl(var(--muted));\n  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --accent-border: hsl(var(--accent));\n  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --destructive-border: hsl(var(--destructive));\n  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n}\n\n@layer base {\n  * {\n    border-color: hsl(var(--border));\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n  }\n}\n\n/**\n * Using the elevate system.\n * Automatic contrast adjustment.\n *\n * <element className=\"hover-elevate\" />\n * <element className=\"active-elevate-2\" />\n *\n * // Using the tailwind utility when a data attribute is \"on\"\n * <element className=\"toggle-elevate data-[state=on]:toggle-elevated\" />\n * // Or manually controlling the toggle state\n * <element className=\"toggle-elevate toggle-elevated\" />\n *\n * Elevation systems have to handle many states.\n * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)\n * - toggled or not\n * - focused or not (this is not handled with these utilities)\n *\n * Even without handling focused or not, this is six possible combinations that\n * need to be distinguished from eachother visually.\n */\n@layer utilities {\n\n  /* Hide ugly search cancel button in Chrome until we can style it properly */\n  input[type=\"search\"]::-webkit-search-cancel-button {\n    @apply hidden;\n  }\n\n  /* Placeholder styling for contentEditable div */\n  [contenteditable][data-placeholder]:empty::before {\n    content: attr(data-placeholder);\n    color: hsl(var(--muted-foreground));\n    pointer-events: none;\n  }\n\n  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of\n   * buttons/badges can remove the automatic brightness adjustment on interactions\n   * and program their own. */\n  .no-default-hover-elevate {}\n\n  .no-default-active-elevate {}\n\n\n  /**\n   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.\n   * This way they can stack/compound. Both will overlap the parent's borders!\n   * So borders will be automatically adjusted both on toggle, and hover/active,\n   * and they will be compounded.\n   */\n  .toggle-elevate::before,\n  .toggle-elevate-2::before {\n    content: \"\";\n    pointer-events: none;\n    position: absolute;\n    inset: 0px;\n    /*border-radius: inherit;   match rounded corners */\n    border-radius: inherit;\n    z-index: -1;\n    /* sits behind content but above backdrop */\n  }\n\n  .toggle-elevate.toggle-elevated::before {\n    background-color: var(--elevate-2);\n  }\n\n  /* If there's a 1px border, adjust the inset so that it covers that parent's border */\n  .border.toggle-elevate::before {\n    inset: -1px;\n  }\n\n  /* Does not work on elements with overflow:hidden! */\n  .hover-elevate:not(.no-default-hover-elevate),\n  .active-elevate:not(.no-default-active-elevate),\n  .hover-elevate-2:not(.no-default-hover-elevate),\n  .active-elevate-2:not(.no-default-active-elevate) {\n    position: relative;\n    z-index: 0;\n  }\n\n  .hover-elevate:not(.no-default-hover-elevate)::after,\n  .active-elevate:not(.no-default-active-elevate)::after,\n  .hover-elevate-2:not(.no-default-hover-elevate)::after,\n  .active-elevate-2:not(.no-default-active-elevate)::after {\n    content: \"\";\n    pointer-events: none;\n    position: absolute;\n    inset: 0px;\n    /*border-radius: inherit;   match rounded corners */\n    border-radius: inherit;\n    z-index: 999;\n    /* sits in front of content */\n  }\n\n  .hover-elevate:hover:not(.no-default-hover-elevate)::after,\n  .active-elevate:active:not(.no-default-active-elevate)::after {\n    background-color: var(--elevate-1);\n  }\n\n  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,\n  .active-elevate-2:active:not(.no-default-active-elevate)::after {\n    background-color: var(--elevate-2);\n  }\n\n  /* If there's a 1px border, adjust the inset so that it covers that parent's border */\n  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,\n  .border.active-elevate:not(.no-active-interaction-elevate)::after,\n  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,\n  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,\n  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {\n    inset: -1px;\n  }\n}","size_bytes":11081},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/navigation.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Link, useLocation } from \"wouter\";\nimport { Menu, X } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { ThemeToggle } from \"@/components/theme-toggle\";\nimport { cn } from \"@/lib/utils\";\n\nexport function Navigation() {\n  const [isScrolled, setIsScrolled] = useState(false);\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const [location] = useLocation();\n\n  useEffect(() => {\n    const handleScroll = () => {\n      setIsScrolled(window.scrollY > 20);\n    };\n\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n\n  const navLinks = [\n    { href: \"/\", label: \"Home\" },\n    { href: \"/about\", label: \"About\" },\n    { href: \"/donate\", label: \"Donate\" },\n  ];\n\n  return (\n    <nav\n      className={cn(\n        \"fixed top-0 left-0 right-0 z-50 transition-all duration-300\",\n        isScrolled\n          ? \"bg-background/95 backdrop-blur-md border-b shadow-sm\"\n          : \"bg-transparent\"\n      )}\n    >\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex items-center justify-between h-16\">\n          {/* Logo */}\n          <Link href=\"/\" className=\"flex items-center space-x-3\">\n            <div className=\"flex items-center justify-center w-10 h-10 rounded-md bg-primary text-primary-foreground font-bold text-xl\">\n              J\n            </div>\n            <span className={cn(\n              \"font-serif font-bold text-xl transition-colors\",\n              isScrolled ? \"text-foreground\" : \"text-white dark:text-foreground\"\n            )}>\n              JENGE Impact Fund\n            </span>\n          </Link>\n\n          {/* Desktop Navigation */}\n          <div className=\"hidden md:flex items-center space-x-8\">\n            {navLinks.map((link) => (\n              <Link key={link.href} href={link.href}>\n                <a className={cn(\n                  \"text-sm font-medium transition-colors hover:text-primary\",\n                  location === link.href\n                    ? \"text-primary\"\n                    : isScrolled\n                    ? \"text-foreground\"\n                    : \"text-white dark:text-foreground\"\n                )} data-testid={`link-${link.label.toLowerCase()}`}>\n                  {link.label}\n                </a>\n              </Link>\n            ))}\n            \n            <ThemeToggle />\n            \n            <Link href=\"/donate\">\n              <Button variant=\"default\" size=\"default\" data-testid=\"button-donate-nav\">\n                Donate Now\n              </Button>\n            </Link>\n          </div>\n\n          {/* Mobile Menu Button */}\n          <div className=\"flex md:hidden items-center space-x-2\">\n            <ThemeToggle />\n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n              className={cn(\n                isScrolled ? \"text-foreground\" : \"text-white dark:text-foreground\"\n              )}\n              data-testid=\"button-mobile-menu\"\n            >\n              {isMobileMenuOpen ? <X className=\"h-6 w-6\" /> : <Menu className=\"h-6 w-6\" />}\n            </Button>\n          </div>\n        </div>\n\n        {/* Mobile Menu */}\n        {isMobileMenuOpen && (\n          <div className=\"md:hidden py-4 border-t bg-background\">\n            <div className=\"flex flex-col space-y-3\">\n              {navLinks.map((link) => (\n                <Link key={link.href} href={link.href}>\n                  <a\n                    onClick={() => setIsMobileMenuOpen(false)}\n                    className={cn(\n                      \"block px-3 py-2 text-base font-medium rounded-md transition-colors\",\n                      location === link.href\n                        ? \"bg-accent text-accent-foreground\"\n                        : \"text-foreground hover:bg-accent\"\n                    )}\n                    data-testid={`link-mobile-${link.label.toLowerCase()}`}\n                  >\n                    {link.label}\n                  </a>\n                </Link>\n              ))}\n              <Link href=\"/donate\">\n                <Button\n                  variant=\"default\"\n                  className=\"w-full\"\n                  onClick={() => setIsMobileMenuOpen(false)}\n                  data-testid=\"button-donate-mobile\"\n                >\n                  Donate Now\n                </Button>\n              </Link>\n            </div>\n          </div>\n        )}\n      </div>\n    </nav>\n  );\n}\n","size_bytes":4575},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-9 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5741},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/components/ui/sidebar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, VariantProps } from \"class-variance-authority\"\nimport { PanelLeftIcon } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nfunction SidebarProvider({\n  defaultOpen = true,\n  open: openProp,\n  onOpenChange: setOpenProp,\n  className,\n  style,\n  children,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  defaultOpen?: boolean\n  open?: boolean\n  onOpenChange?: (open: boolean) => void\n}) {\n  const isMobile = useIsMobile()\n  const [openMobile, setOpenMobile] = React.useState(false)\n\n  // This is the internal state of the sidebar.\n  // We use openProp and setOpenProp for control from outside the component.\n  const [_open, _setOpen] = React.useState(defaultOpen)\n  const open = openProp ?? _open\n  const setOpen = React.useCallback(\n    (value: boolean | ((value: boolean) => boolean)) => {\n      const openState = typeof value === \"function\" ? value(open) : value\n      if (setOpenProp) {\n        setOpenProp(openState)\n      } else {\n        _setOpen(openState)\n      }\n\n      // This sets the cookie to keep the sidebar state.\n      document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n    },\n    [setOpenProp, open]\n  )\n\n  // Helper to toggle the sidebar.\n  const toggleSidebar = React.useCallback(() => {\n    return isMobile ? setOpenMobile((open) => !open) : setOpen((open) => !open)\n  }, [isMobile, setOpen, setOpenMobile])\n\n  // Adds a keyboard shortcut to toggle the sidebar.\n  React.useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (\n        event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n        (event.metaKey || event.ctrlKey)\n      ) {\n        event.preventDefault()\n        toggleSidebar()\n      }\n    }\n\n    window.addEventListener(\"keydown\", handleKeyDown)\n    return () => window.removeEventListener(\"keydown\", handleKeyDown)\n  }, [toggleSidebar])\n\n  // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n  // This makes it easier to style the sidebar with Tailwind classes.\n  const state = open ? \"expanded\" : \"collapsed\"\n\n  const contextValue = React.useMemo<SidebarContextProps>(\n    () => ({\n      state,\n      open,\n      setOpen,\n      isMobile,\n      openMobile,\n      setOpenMobile,\n      toggleSidebar,\n    }),\n    [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n  )\n\n  return (\n    <SidebarContext.Provider value={contextValue}>\n      <TooltipProvider delayDuration={0}>\n        <div\n          data-slot=\"sidebar-wrapper\"\n          style={\n            {\n              \"--sidebar-width\": SIDEBAR_WIDTH,\n              \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n              ...style,\n            } as React.CSSProperties\n          }\n          className={cn(\n            \"group/sidebar-wrapper has-data-[variant=inset]:bg-sidebar flex min-h-svh w-full\",\n            className\n          )}\n          {...props}\n        >\n          {children}\n        </div>\n      </TooltipProvider>\n    </SidebarContext.Provider>\n  )\n}\n\nfunction Sidebar({\n  side = \"left\",\n  variant = \"sidebar\",\n  collapsible = \"offcanvas\",\n  className,\n  children,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  side?: \"left\" | \"right\"\n  variant?: \"sidebar\" | \"floating\" | \"inset\"\n  collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n}) {\n  const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n  if (collapsible === \"none\") {\n    return (\n      <div\n        data-slot=\"sidebar\"\n        className={cn(\n          \"bg-sidebar text-sidebar-foreground flex h-full w-[var(--sidebar-width)] flex-col\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n\n  if (isMobile) {\n    return (\n      <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n        <SheetContent\n          data-sidebar=\"sidebar\"\n          data-slot=\"sidebar\"\n          data-mobile=\"true\"\n          className=\"bg-sidebar text-sidebar-foreground w-[var(--sidebar-width)] p-0 [&>button]:hidden\"\n          style={\n            {\n              \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n            } as React.CSSProperties\n          }\n          side={side}\n        >\n          <SheetHeader className=\"sr-only\">\n            <SheetTitle>Sidebar</SheetTitle>\n            <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n          </SheetHeader>\n          <div className=\"flex h-full w-full flex-col\">{children}</div>\n        </SheetContent>\n      </Sheet>\n    )\n  }\n\n  return (\n    <div\n      className=\"group peer text-sidebar-foreground hidden md:block\"\n      data-state={state}\n      data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n      data-variant={variant}\n      data-side={side}\n      data-slot=\"sidebar\"\n    >\n      {/* This is what handles the sidebar gap on desktop */}\n      <div\n        data-slot=\"sidebar-gap\"\n        className={cn(\n          \"relative w-[var(--sidebar-width)] bg-transparent transition-[width] duration-200 ease-linear\",\n          \"group-data-[collapsible=offcanvas]:w-0\",\n          \"group-data-[side=right]:rotate-180\",\n          variant === \"floating\" || variant === \"inset\"\n            ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)+var(--spacing-4))]\"\n            : \"group-data-[collapsible=icon]:w-[var(--sidebar-width-icon)]\"\n        )}\n      />\n      <div\n        data-slot=\"sidebar-container\"\n        className={cn(\n          \"fixed inset-y-0 z-10 hidden h-svh w-[var(--sidebar-width)] transition-[left,right,width] duration-200 ease-linear md:flex\",\n          side === \"left\"\n            ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n            : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n          // Adjust the padding for floating and inset variants.\n          variant === \"floating\" || variant === \"inset\"\n            ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)+var(--spacing-4)+2px)]\"\n            : \"group-data-[collapsible=icon]:w-[var(--sidebar-width-icon)] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n          className\n        )}\n        {...props}\n      >\n        <div\n          data-sidebar=\"sidebar\"\n          data-slot=\"sidebar-inner\"\n          className=\"bg-sidebar group-data-[variant=floating]:border-sidebar-border flex h-full w-full flex-col group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:shadow-sm\"\n        >\n          {children}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction SidebarTrigger({\n  className,\n  onClick,\n  ...props\n}: React.ComponentProps<typeof Button>) {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      data-sidebar=\"trigger\"\n      data-slot=\"sidebar-trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeftIcon />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n}\n\nfunction SidebarRail({ className, ...props }: React.ComponentProps<\"button\">) {\n  const { toggleSidebar } = useSidebar()\n\n  // Note: Tailwind v3.4 doesn't support \"in-\" selectors. So the rail won't work perfectly.\n  return (\n    <button\n      data-sidebar=\"rail\"\n      data-slot=\"sidebar-rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"hover:after:bg-sidebar-border absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear group-data-[side=left]:-right-4 group-data-[side=right]:left-0 after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] sm:flex\",\n        \"in-data-[side=left]:cursor-w-resize in-data-[side=right]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"hover:group-data-[collapsible=offcanvas]:bg-sidebar group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarInset({ className, ...props }: React.ComponentProps<\"main\">) {\n  return (\n    <main\n      data-slot=\"sidebar-inset\"\n      className={cn(\n        \"bg-background relative flex w-full flex-1 flex-col\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow-sm md:peer-data-[variant=inset]:peer-data-[state=collapsed]:ml-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarInput({\n  className,\n  ...props\n}: React.ComponentProps<typeof Input>) {\n  return (\n    <Input\n      data-slot=\"sidebar-input\"\n      data-sidebar=\"input\"\n      className={cn(\"bg-background h-8 w-full shadow-none\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-header\"\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-footer\"\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof Separator>) {\n  return (\n    <Separator\n      data-slot=\"sidebar-separator\"\n      data-sidebar=\"separator\"\n      className={cn(\"bg-sidebar-border mx-2 w-auto\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-content\"\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroup({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-group\"\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroupLabel({\n  className,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"div\"> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-group-label\"\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"text-sidebar-foreground/70 ring-sidebar-ring flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium outline-hidden transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:h-4 [&>svg]:w-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroupAction({\n  className,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-group-action\"\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground absolute top-3.5 right-3 flex aspect-square w-5 items-center justify-center rounded-md p-0 outline-hidden transition-transform focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 md:after:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroupContent({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-group-content\"\n      data-sidebar=\"group-content\"\n      className={cn(\"w-full text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenu({ className, ...props }: React.ComponentProps<\"ul\">) {\n  return (\n    <ul\n      data-slot=\"sidebar-menu\"\n      data-sidebar=\"menu\"\n      className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuItem({ className, ...props }: React.ComponentProps<\"li\">) {\n  return (\n    <li\n      data-slot=\"sidebar-menu-item\"\n      data-sidebar=\"menu-item\"\n      className={cn(\"group/menu-item relative\", className)}\n      {...props}\n    />\n  )\n}\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-hidden ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-data-[sidebar=menu-action]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:w-8! group-data-[collapsible=icon]:h-8! group-data-[collapsible=icon]:p-2! [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:p-0!\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction SidebarMenuButton({\n  asChild = false,\n  isActive = false,\n  variant = \"default\",\n  size = \"default\",\n  tooltip,\n  className,\n  ...props\n}: React.ComponentProps<\"button\"> & {\n  asChild?: boolean\n  isActive?: boolean\n  tooltip?: string | React.ComponentProps<typeof TooltipContent>\n} & VariantProps<typeof sidebarMenuButtonVariants>) {\n  const Comp = asChild ? Slot : \"button\"\n  const { isMobile, state } = useSidebar()\n\n  const button = (\n    <Comp\n      data-slot=\"sidebar-menu-button\"\n      data-sidebar=\"menu-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n      {...props}\n    />\n  )\n\n  if (!tooltip) {\n    return button\n  }\n\n  if (typeof tooltip === \"string\") {\n    tooltip = {\n      children: tooltip,\n    }\n  }\n\n  return (\n    <Tooltip>\n      <TooltipTrigger asChild>{button}</TooltipTrigger>\n      <TooltipContent\n        side=\"right\"\n        align=\"center\"\n        hidden={state !== \"collapsed\" || isMobile}\n        {...tooltip}\n      />\n    </Tooltip>\n  )\n}\n\nfunction SidebarMenuAction({\n  className,\n  asChild = false,\n  showOnHover = false,\n  ...props\n}: React.ComponentProps<\"button\"> & {\n  asChild?: boolean\n  showOnHover?: boolean\n}) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-menu-action\"\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground peer-hover/menu-button:text-sidebar-accent-foreground absolute top-1.5 right-1 flex aspect-square w-5 items-center justify-center rounded-md p-0 outline-hidden transition-transform focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 md:after:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"peer-data-[active=true]/menu-button:text-sidebar-accent-foreground group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuBadge({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-menu-badge\"\n      data-sidebar=\"menu-badge\"\n      className={cn(\n        \"text-sidebar-foreground pointer-events-none absolute right-1 flex h-5 min-w-5 items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums select-none\",\n        \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuSkeleton({\n  className,\n  showIcon = false,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  showIcon?: boolean\n}) {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      data-slot=\"sidebar-menu-skeleton\"\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[var(--skeleton-width)] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n}\n\nfunction SidebarMenuSub({ className, ...props }: React.ComponentProps<\"ul\">) {\n  return (\n    <ul\n      data-slot=\"sidebar-menu-sub\"\n      data-sidebar=\"menu-sub\"\n      className={cn(\n        \"border-sidebar-border mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l px-2.5 py-0.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuSubItem({\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) {\n  return (\n    <li\n      data-slot=\"sidebar-menu-sub-item\"\n      data-sidebar=\"menu-sub-item\"\n      className={cn(\"group/menu-sub-item relative\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuSubButton({\n  asChild = false,\n  size = \"md\",\n  isActive = false,\n  className,\n  ...props\n}: React.ComponentProps<\"a\"> & {\n  asChild?: boolean\n  size?: \"sm\" | \"md\"\n  isActive?: boolean\n}) {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-menu-sub-button\"\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground active:bg-sidebar-accent active:text-sidebar-accent-foreground [&>svg]:text-sidebar-accent-foreground flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 outline outline-2 outline-transparent outline-offset-2 focus-visible:ring-2 disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":21846},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\" +\n  \" hover-elevate active-elevate-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground border border-primary-border\",\n        destructive:\n          \"bg-destructive text-destructive-foreground border border-destructive-border\",\n        outline:\n          // Shows the background color of whatever card / sidebar / accent background it is inside of.\n          // Inherits the current text color.\n          \" border [border-color:var(--button-outline)]  shadow-xs active:shadow-none \",\n        secondary: \"border bg-secondary text-secondary-foreground border border-secondary-border \",\n        // Add a transparent border so that when someone toggles a border on later, it doesn't shift layout/size.\n        ghost: \"border border-transparent\",\n      },\n      // Heights are set as \"min\" heights, because sometimes Ai will place large amount of content\n      // inside buttons. With a min-height they will look appropriate with small amounts of content,\n      // but will expand to fit large amounts of content.\n      size: {\n        default: \"min-h-9 px-4 py-2\",\n        sm: \"min-h-8 rounded-md px-3 text-xs\",\n        lg: \"min-h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  },\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":2359},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/stats-section.tsx":{"content":"import { useEffect, useRef, useState } from \"react\";\nimport { Users, TrendingDown, Briefcase, PieChart } from \"lucide-react\";\n\ninterface Stat {\n  icon: React.ElementType;\n  value: string;\n  label: string;\n  color: string;\n}\n\nconst stats: Stat[] = [\n  {\n    icon: Users,\n    value: \"75%\",\n    label: \"Kenyan youth below age 35\",\n    color: \"text-chart-1\",\n  },\n  {\n    icon: TrendingDown,\n    value: \"67%\",\n    label: \"Youth unemployment rate\",\n    color: \"text-destructive\",\n  },\n  {\n    icon: Briefcase,\n    value: \"703K\",\n    label: \"Jobs in informal sector\",\n    color: \"text-chart-3\",\n  },\n  {\n    icon: PieChart,\n    value: \"5%\",\n    label: \"Creative economy GDP contribution\",\n    color: \"text-chart-4\",\n  },\n];\n\nfunction AnimatedNumber({ value, className }: { value: string; className?: string }) {\n  const [displayValue, setDisplayValue] = useState(\"0\");\n  const [isVisible, setIsVisible] = useState(false);\n  const ref = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting) {\n          setIsVisible(true);\n        }\n      },\n      { threshold: 0.3 }\n    );\n\n    if (ref.current) {\n      observer.observe(ref.current);\n    }\n\n    return () => observer.disconnect();\n  }, []);\n\n  useEffect(() => {\n    if (!isVisible) return;\n\n    // Check if it's a percentage or number with K\n    if (value.endsWith('%')) {\n      const targetNum = parseInt(value);\n      let current = 0;\n      const increment = targetNum / 50;\n      const timer = setInterval(() => {\n        current += increment;\n        if (current >= targetNum) {\n          setDisplayValue(value);\n          clearInterval(timer);\n        } else {\n          setDisplayValue(Math.floor(current) + '%');\n        }\n      }, 20);\n      return () => clearInterval(timer);\n    } else if (value.endsWith('K')) {\n      const targetNum = parseInt(value);\n      let current = 0;\n      const increment = targetNum / 50;\n      const timer = setInterval(() => {\n        current += increment;\n        if (current >= targetNum) {\n          setDisplayValue(value);\n          clearInterval(timer);\n        } else {\n          setDisplayValue(Math.floor(current) + 'K');\n        }\n      }, 20);\n      return () => clearInterval(timer);\n    } else {\n      setDisplayValue(value);\n    }\n  }, [isVisible, value]);\n\n  return <div ref={ref} className={className}>{displayValue}</div>;\n}\n\nexport function StatsSection() {\n  return (\n    <section className=\"py-16 md:py-24 bg-accent/30\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-12\">\n          <h2 className=\"text-3xl md:text-4xl font-serif font-bold mb-4\">\n            Too many young people are Talented, Skilled, and Well-Educated, but Unemployed\n          </h2>\n          <p className=\"text-lg text-muted-foreground max-w-3xl mx-auto\">\n            The youth unemployment crisis in Kenya demands urgent, innovative solutions\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n          {stats.map((stat, index) => {\n            const Icon = stat.icon;\n            return (\n              <div\n                key={index}\n                className=\"text-center p-6 rounded-lg bg-card hover-elevate transition-all duration-300\"\n                data-testid={`stat-card-${index}`}\n              >\n                <div className={`inline-flex items-center justify-center w-12 h-12 rounded-full bg-accent mb-4 ${stat.color}`}>\n                  <Icon className=\"h-6 w-6\" />\n                </div>\n                <AnimatedNumber\n                  value={stat.value}\n                  className=\"text-4xl md:text-5xl font-bold font-serif mb-2\"\n                />\n                <p className=\"text-sm text-muted-foreground leading-relaxed\">\n                  {stat.label}\n                </p>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":3992},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/donation-pathway-card.tsx":{"content":"import { Link } from \"wouter\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { ArrowRight } from \"lucide-react\";\n\ninterface DonationPathwayCardProps {\n  title: string;\n  description: string;\n  imageUrl: string;\n  commitment: {\n    minimumContribution: string;\n    timeCommitment: string;\n  };\n  benefits: string[];\n  ctaText: string;\n  ctaLink: string;\n  featured?: boolean;\n}\n\nexport function DonationPathwayCard({\n  title,\n  description,\n  imageUrl,\n  commitment,\n  benefits,\n  ctaText,\n  ctaLink,\n  featured = false,\n}: DonationPathwayCardProps) {\n  return (\n    <Card className={`overflow-hidden hover-elevate transition-all duration-300 h-full flex flex-col ${featured ? 'ring-2 ring-primary' : ''}`}>\n      <div className=\"relative h-48 overflow-hidden\">\n        <img\n          src={imageUrl}\n          alt={title}\n          className=\"w-full h-full object-cover transition-transform duration-300 hover:scale-105\"\n        />\n        {featured && (\n          <Badge className=\"absolute top-4 right-4\" variant=\"default\">\n            Most Popular\n          </Badge>\n        )}\n      </div>\n\n      <CardHeader>\n        <CardTitle className=\"text-2xl font-serif\">{title}</CardTitle>\n        <CardDescription className=\"text-base leading-relaxed\">\n          {description}\n        </CardDescription>\n      </CardHeader>\n\n      <CardContent className=\"flex-1 flex flex-col justify-between space-y-6\">\n        <div className=\"space-y-4\">\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div>\n              <p className=\"text-xs text-muted-foreground mb-1\">Minimum</p>\n              <p className=\"font-semibold text-foreground\">{commitment.minimumContribution}</p>\n            </div>\n            <div>\n              <p className=\"text-xs text-muted-foreground mb-1\">Commitment</p>\n              <p className=\"font-semibold text-foreground\">{commitment.timeCommitment}</p>\n            </div>\n          </div>\n\n          <div className=\"space-y-2\">\n            {benefits.map((benefit, index) => (\n              <div key={index} className=\"flex items-start gap-2\">\n                <div className=\"w-1.5 h-1.5 rounded-full bg-primary mt-2 flex-shrink-0\" />\n                <p className=\"text-sm text-muted-foreground\">{benefit}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        <Link href={ctaLink} className=\"w-full\">\n          <Button variant={featured ? \"default\" : \"outline\"} className=\"w-full group\" data-testid={`button-${title.toLowerCase().replace(/\\s+/g, '-')}`}>\n            {ctaText}\n            <ArrowRight className=\"ml-2 h-4 w-4 transition-transform group-hover:translate-x-1\" />\n          </Button>\n        </Link>\n      </CardContent>\n    </Card>\n  );\n}\n","size_bytes":2864},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  // Whitespace-nowrap: Badges should never wrap.\n  \"whitespace-nowrap inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\" +\n  \" hover-elevate \" ,\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground shadow-xs\",\n        secondary: \"border-transparent bg-secondary text-secondary-foreground\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground shadow-xs\",\n\n        outline: \" border [border-color:var(--badge-outline)] shadow-xs\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  },\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  );\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1202},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"GITHUB_PAGES_DEPLOY.md":{"content":"# Deploy JENGE Impact Fund to GitHub Pages\n\nThis guide shows you how to deploy your JENGE Impact Fund donation platform to GitHub Pages for free hosting.\n\n## Quick Start (5 Minutes)\n\n### Step 1: Create `.github/workflows/deploy.yml`\n\nCreate this file in your repository with the following content:\n\n```yaml\nname: Deploy to GitHub Pages\n\non:\n  push:\n    branches: [ main ]\n  workflow_dispatch:\n\npermissions:\n  contents: read\n  pages: write\n  id-token: write\n\nconcurrency:\n  group: \"pages\"\n  cancel-in-progress: false\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v4\n        \n      - name: Setup Node\n        uses: actions/setup-node@v4\n        with:\n          node-version: '20'\n          cache: 'npm'\n          \n      - name: Install dependencies\n        run: npm ci\n        \n      - name: Build\n        run: npm run build\n        env:\n          VITE_PAYSTACK_PUBLIC_KEY: ${{ secrets.VITE_PAYSTACK_PUBLIC_KEY }}\n          \n      - name: Setup Pages\n        uses: actions/configure-pages@v4\n        \n      - name: Upload artifact\n        uses: actions/upload-pages-artifact@v3\n        with:\n          path: './dist/public'\n          \n      - name: Deploy to GitHub Pages\n        id: deployment\n        uses: actions/deploy-pages@v4\n```\n\n### Step 2: Enable GitHub Pages\n\n1. Go to your repository on GitHub\n2. Click **Settings** → **Pages**\n3. Under \"Build and deployment\"\n   - Source: Select **GitHub Actions**\n\n### Step 3: Add Paystack Secret\n\n1. Go to **Settings** → **Secrets and variables** → **Actions**\n2. Click **New repository secret**\n3. Name: `VITE_PAYSTACK_PUBLIC_KEY`\n4. Value: Your Paystack public key (e.g., `pk_live_xxxxx` or `pk_test_xxxxx`)\n5. Click **Add secret**\n\n### Step 4: Deploy\n\nPush your code to the `main` branch:\n\n```bash\ngit add .\ngit commit -m \"Setup GitHub Pages deployment\"\ngit push origin main\n```\n\nYour site will be live at: `https://yourusername.github.io/your-repo-name/`\n\n## Features That Work\n\n✅ All pages (Home, About, Donate)\n✅ Paystack payments (client-side popup)\n✅ Contact form (via Formspree)\n✅ Campaign progress tracking\n✅ Dark mode toggle\n✅ Fully responsive design\n\n## Updating Campaign Stats\n\nThe campaign statistics are served from the backend when running locally, but for GitHub Pages you'll need to configure them as static data or use an external API.\n\n### Option A: Static JSON (Simple)\n\n1. Create `client/public/campaign-stats.json`:\n```json\n{\n  \"pledged\": 1520000,\n  \"goal\": 20000000,\n  \"builders\": 42\n}\n```\n\n2. Update the stats hook to use this file (already done if using the static version)\n\n3. To update stats, edit the JSON file and push changes\n\n### Option B: External API (Dynamic)\n\nUse a service like:\n- Airtable (with public API)\n- Google Sheets (with public API)\n- Supabase (free tier)\n\n## Custom Domain (Optional)\n\n### Step 1: Add CNAME File\n\nCreate `client/public/CNAME` with your domain:\n```\ndonate.jengeimpact.org\n```\n\n### Step 2: Configure DNS\n\nAdd these DNS records at your domain provider:\n\nFor apex domain (jengeimpact.org):\n```\nType: A\nHost: @\nValue: 185.199.108.153\nValue: 185.199.109.153\nValue: 185.199.110.153\nValue: 185.199.111.153\n```\n\nFor subdomain (donate.jengeimpact.org):\n```\nType: CNAME\nHost: donate\nValue: yourusername.github.io\n```\n\n### Step 3: Enable HTTPS\n\n1. Go to Settings → Pages\n2. Check **Enforce HTTPS**\n3. Wait 24 hours for DNS propagation\n4. Your site will be available at your custom domain with SSL\n\n## Contact Form Setup\n\nThe app uses Formspree for contact forms. To use your own:\n\n1. Sign up at https://formspree.io (free for 50 submissions/month)\n2. Create a new form\n3. Get your form endpoint (e.g., `https://formspree.io/f/xxxxx`)\n4. Update in `client/src/components/contact-form.tsx`:\n   ```typescript\n   const response = await fetch(\"https://formspree.io/f/YOUR_FORM_ID\", {\n   ```\n\n## Payment Processing\n\n### Current Setup\n- Uses Paystack Inline (client-side popup)\n- Payments process directly through Paystack\n- No server-side verification (static site limitation)\n\n### Important Notes\n- Payment verification happens in Paystack dashboard\n- No automatic database updates (static site)\n- Suitable for donation tracking via Paystack dashboard\n\n### Upgrade Path (With Backend)\nFor full payment verification and automated processes:\n1. Deploy backend to Heroku/Railway/Render\n2. Add payment webhook endpoint\n3. Connect to database for real-time stats\n\n## Troubleshooting\n\n### Build Fails\n- Check that all secrets are set correctly\n- Verify Node version is 20.x\n- Check GitHub Actions logs for specific errors\n\n### Pages Show 404\n- Ensure hash-based routing is working (`/#/` in URLs)\n- Check that Pages is enabled in repository settings\n- Verify the build artifact path is correct\n\n### Payments Don't Work\n- Verify `VITE_PAYSTACK_PUBLIC_KEY` secret is set\n- Check browser console for Paystack script errors\n- Ensure using correct key (test vs live)\n\n### Custom Domain Not Working\n- Wait 24 hours for DNS propagation\n- Verify DNS records are correct\n- Check CNAME file exists in build output\n\n## Local Development\n\n```bash\n# Install dependencies\nnpm install\n\n# Run development server\nnpm run dev\n\n# Build for production\nnpm run build\n\n# Preview production build\nnpm run preview\n```\n\n## Support\n\n- GitHub Issues: Open an issue in your repository\n- Paystack Docs: https://paystack.com/docs\n- GitHub Pages Docs: https://docs.github.com/pages\n\n## Next Steps\n\n1. ✅ Set up GitHub Actions workflow\n2. ✅ Add Paystack secret\n3. ✅ Push to GitHub\n4. ⏳ Wait for deployment (2-3 minutes)\n5. ✅ Visit your live site!\n\nYour JENGE Impact Fund donation platform will be live and accepting donations in minutes! 🎉\n","size_bytes":5688},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/pages/about.tsx":{"content":"import { Link } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card } from \"@/components/ui/card\";\nimport { BuilderTierCard } from \"@/components/builder-tier-card\";\nimport { ArrowRight, Target, Users, Heart, Zap } from \"lucide-react\";\n\nexport default function About() {\n  const builderTierStats = [\n    { name: \"Palladium Rock Builders\", count: 500, annual: 25000 },\n    { name: \"Platinum Rock Builders\", count: 500, annual: 20000 },\n    { name: \"Gold Rock Builders\", count: 1250, annual: 10000 },\n    { name: \"Diamond Rock Builders\", count: 5000, annual: 5000 },\n    { name: \"Silver Rock Builders\", count: 12500, annual: 2000 },\n    { name: \"Bronze Rock Builders\", count: 35000, annual: 1000 },\n  ];\n\n  const totalBuilders = builderTierStats.reduce((sum, tier) => sum + tier.count, 0);\n\n  return (\n    <div className=\"min-h-screen pt-16\">\n      {/* Hero Section */}\n      <section className=\"relative min-h-[500px] flex items-center justify-center overflow-hidden bg-accent/30\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-20 md:py-32 text-center\">\n          <h1 className=\"text-4xl md:text-5xl lg:text-6xl font-serif font-bold mb-6 leading-tight\">\n            Because 67% of Kenya's Youth are Unemployed\n          </h1>\n          <p className=\"text-xl md:text-2xl text-muted-foreground max-w-4xl mx-auto leading-relaxed\">\n            We are building a fund that will leverage the power of solidarity and cooperation to help reduce the rate of youth unemployment in Kenya.\n          </p>\n        </div>\n      </section>\n\n      {/* About JENGE Impact Fund */}\n      <section className=\"py-16 md:py-24\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\n            <div>\n              <h2 className=\"text-3xl md:text-4xl font-serif font-bold mb-6\">\n                About JENGE Impact Fund\n              </h2>\n              <div className=\"space-y-4 text-muted-foreground leading-relaxed\">\n                <p>\n                  The JENGE Impact Fund is a long-term endowment established by JENGE Kulture to strengthen solidarity-driven systems supporting youth and youth-led enterprises in Kenya and across Africa.\n                </p>\n                <p>\n                  It expands access to shared benefits, services and resources necessary for personal and business success, unlocking youth-driven social and economic transformation - especially in the creative economy.\n                </p>\n                <p>\n                  The fund exists to bridge the gap particularly for youth-led collectives, cooperatives and solidarity-driven enterprises, who often lack flexible financing amid declining global aid.\n                </p>\n              </div>\n            </div>\n\n            <div className=\"relative\">\n              <img\n                src=\"https://images.unsplash.com/photo-1559027615-cd4628902d4a?w=800&q=80\"\n                alt=\"Youth collaboration\"\n                className=\"rounded-lg shadow-lg\"\n              />\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Mission Statement */}\n      <section className=\"py-16 md:py-24 bg-primary text-primary-foreground\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"max-w-4xl mx-auto text-center\">\n            <div className=\"inline-flex items-center justify-center w-16 h-16 bg-primary-foreground/10 rounded-full mb-6\">\n              <Target className=\"h-8 w-8\" />\n            </div>\n            <h2 className=\"text-3xl md:text-4xl font-serif font-bold mb-6\">\n              A Catalytic Fund on a Mission\n            </h2>\n            <p className=\"text-xl md:text-2xl leading-relaxed opacity-95\">\n              Our 15-year target is to support <span className=\"font-bold\">5,000 creative collectives, cooperatives or solidarity enterprises</span> - effectively helping <span className=\"font-bold\">500,000 independent creators and professionals</span> achieve sustainable income.\n            </p>\n          </div>\n        </div>\n      </section>\n\n      {/* SESS Impact Model */}\n      <section className=\"py-16 md:py-24\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl md:text-4xl font-serif font-bold mb-4\">\n              The SESS Impact Model\n            </h2>\n            <p className=\"text-lg text-muted-foreground max-w-3xl mx-auto\">\n              JENGE Kulture's strategic framework for catalyzing resilient and inclusive local economies across Africa through a solidarity-driven approach\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center mb-16\">\n            <div className=\"order-2 lg:order-1\">\n              <div className=\"space-y-6\">\n                <div className=\"flex gap-4\">\n                  <div className=\"flex-shrink-0 w-12 h-12 bg-primary/10 rounded-full flex items-center justify-center\">\n                    <span className=\"text-2xl font-bold text-primary\">S</span>\n                  </div>\n                  <div>\n                    <h3 className=\"text-xl font-semibold mb-2\">Solidarity</h3>\n                    <p className=\"text-muted-foreground\">\n                      Building collective strength through shared purpose, mutual support, and interconnected communities of young creators and professionals.\n                    </p>\n                  </div>\n                </div>\n\n                <div className=\"flex gap-4\">\n                  <div className=\"flex-shrink-0 w-12 h-12 bg-primary/10 rounded-full flex items-center justify-center\">\n                    <span className=\"text-2xl font-bold text-primary\">E</span>\n                  </div>\n                  <div>\n                    <h3 className=\"text-xl font-semibold mb-2\">Enterprise</h3>\n                    <p className=\"text-muted-foreground\">\n                      Supporting cooperatives and solidarity-driven businesses that create sustainable livelihoods and economic opportunities for youth.\n                    </p>\n                  </div>\n                </div>\n\n                <div className=\"flex gap-4\">\n                  <div className=\"flex-shrink-0 w-12 h-12 bg-primary/10 rounded-full flex items-center justify-center\">\n                    <span className=\"text-2xl font-bold text-primary\">S</span>\n                  </div>\n                  <div>\n                    <h3 className=\"text-xl font-semibold mb-2\">Sustainability</h3>\n                    <p className=\"text-muted-foreground\">\n                      Ensuring long-term impact through endowment-based funding, scalable solutions, and systems that can be replicated across Africa.\n                    </p>\n                  </div>\n                </div>\n\n                <div className=\"flex gap-4\">\n                  <div className=\"flex-shrink-0 w-12 h-12 bg-primary/10 rounded-full flex items-center justify-center\">\n                    <span className=\"text-2xl font-bold text-primary\">S</span>\n                  </div>\n                  <div>\n                    <h3 className=\"text-xl font-semibold mb-2\">Systems</h3>\n                    <p className=\"text-muted-foreground\">\n                      Creating interconnected support systems that amplify impact, fostering cultural influence and economic transformation.\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"order-1 lg:order-2\">\n              <Card className=\"p-8 bg-accent/30\">\n                <div className=\"aspect-square flex items-center justify-center\">\n                  <div className=\"relative w-64 h-64\">\n                    <div className=\"absolute inset-0 flex items-center justify-center\">\n                      <div className=\"w-48 h-48 rounded-full border-4 border-primary/20 flex items-center justify-center\">\n                        <div className=\"text-center\">\n                          <Zap className=\"h-12 w-12 text-primary mx-auto mb-2\" />\n                          <p className=\"text-sm font-semibold\">SESS Model</p>\n                          <p className=\"text-xs text-muted-foreground\">Reinforcing Loop</p>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"absolute top-0 left-1/2 -translate-x-1/2 -translate-y-1/2\">\n                      <div className=\"w-16 h-16 bg-primary rounded-full flex items-center justify-center text-primary-foreground font-bold\">S</div>\n                    </div>\n                    <div className=\"absolute right-0 top-1/2 -translate-y-1/2 translate-x-1/2\">\n                      <div className=\"w-16 h-16 bg-primary rounded-full flex items-center justify-center text-primary-foreground font-bold\">E</div>\n                    </div>\n                    <div className=\"absolute bottom-0 left-1/2 -translate-x-1/2 translate-y-1/2\">\n                      <div className=\"w-16 h-16 bg-primary rounded-full flex items-center justify-center text-primary-foreground font-bold\">S</div>\n                    </div>\n                    <div className=\"absolute left-0 top-1/2 -translate-y-1/2 -translate-x-1/2\">\n                      <div className=\"w-16 h-16 bg-primary rounded-full flex items-center justify-center text-primary-foreground font-bold\">S</div>\n                    </div>\n                  </div>\n                </div>\n              </Card>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* The WE BUILD Campaign */}\n      <section className=\"py-16 md:py-24 bg-accent/30\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl md:text-4xl font-serif font-bold mb-4\">\n              The \"WE BUILD\" Fundraising Campaign\n            </h2>\n            <p className=\"text-lg text-muted-foreground max-w-3xl mx-auto\">\n              Mobilizing {totalBuilders.toLocaleString()} builders to create a KES 1.2 billion endowment fund over 15 years\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-start mb-12\">\n            <div>\n              <p className=\"text-lg text-muted-foreground mb-6 leading-relaxed\">\n                The \"WE BUILD\" Fundraising Strategy seeks to mobilize 55,000 \"builders\" to build a KES 1.2 billion endowment fund over 15 years, supporting solidarity-driven enterprises in Kenya and Africa.\n              </p>\n              <p className=\"text-lg text-muted-foreground mb-8 leading-relaxed\">\n                By committing to annual donations, builders fuel shared support systems for young independent creators and professionals.\n              </p>\n\n              <div className=\"space-y-3\">\n                {builderTierStats.map((tier, index) => (\n                  <div key={index} className=\"flex items-center justify-between p-4 bg-card rounded-lg\">\n                    <div>\n                      <p className=\"font-semibold\">{tier.name}</p>\n                      <p className=\"text-sm text-muted-foreground\">{tier.count.toLocaleString()} people/organizations</p>\n                    </div>\n                    <div className=\"text-right\">\n                      <p className=\"font-bold text-primary\">KES {tier.annual.toLocaleString()}</p>\n                      <p className=\"text-xs text-muted-foreground\">annually</p>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            <div className=\"space-y-6\">\n              <Card className=\"p-6 bg-primary text-primary-foreground\">\n                <div className=\"flex items-start gap-4\">\n                  <Users className=\"h-8 w-8 flex-shrink-0\" />\n                  <div>\n                    <h3 className=\"text-xl font-semibold mb-2\">Join Us and Help Us Build</h3>\n                    <p className=\"opacity-95\">\n                      Together, we can create lasting socio-economic impact for Kenya's youth. Every builder contribution counts toward our collective goal.\n                    </p>\n                  </div>\n                </div>\n              </Card>\n\n              <Card className=\"p-6\">\n                <div className=\"flex items-start gap-4\">\n                  <Heart className=\"h-8 w-8 text-primary flex-shrink-0\" />\n                  <div>\n                    <h3 className=\"text-xl font-semibold mb-2\">Sustained Impact</h3>\n                    <p className=\"text-muted-foreground\">\n                      Your 15-year commitment creates a sustainable foundation that will continue generating impact for generations to come.\n                    </p>\n                  </div>\n                </div>\n              </Card>\n\n              <Link href=\"/donate\">\n                <Button size=\"lg\" className=\"w-full\" data-testid=\"button-become-builder\">\n                  Become a Builder\n                  <ArrowRight className=\"ml-2 h-5 w-5\" />\n                </Button>\n              </Link>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* About JENGE Kulture */}\n      <section className=\"py-16 md:py-24\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"max-w-4xl mx-auto\">\n            <div className=\"text-center mb-8\">\n              <h2 className=\"text-3xl md:text-4xl font-serif font-bold mb-4\">\n                About JENGE Kulture\n              </h2>\n            </div>\n\n            <Card className=\"p-8 bg-accent/30\">\n              <p className=\"text-lg text-muted-foreground leading-relaxed mb-4\">\n                JENGE Impact Fund is an initiative of <span className=\"font-semibold text-foreground\">JENGE Kulture</span>, an organization dedicated to supporting solidarity-driven systems for youth empowerment in Africa.\n              </p>\n              <p className=\"text-lg text-muted-foreground leading-relaxed\">\n                Through innovative approaches and community-centered strategies, JENGE Kulture works to unlock economic opportunities for young people, particularly in the creative economy where traditional support systems often fall short.\n              </p>\n            </Card>\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-16 md:py-24 bg-primary text-primary-foreground\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h2 className=\"text-3xl md:text-4xl font-serif font-bold mb-6\">\n            Ready to Make a Difference?\n          </h2>\n          <p className=\"text-xl mb-8 opacity-95\">\n            Join thousands of builders committed to transforming the lives of Kenya's youth through solidarity and cooperation.\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Link href=\"/donate\">\n              <Button size=\"lg\" variant=\"secondary\" data-testid=\"button-cta-donate\">\n                Start Building Today\n                <ArrowRight className=\"ml-2 h-5 w-5\" />\n              </Button>\n            </Link>\n            <Link href=\"/\">\n              <Button size=\"lg\" variant=\"outline\" className=\"bg-primary-foreground/10 border-primary-foreground/20 text-primary-foreground hover:bg-primary-foreground/20\">\n                Learn More\n              </Button>\n            </Link>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n","size_bytes":15529},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n          await import(\"@replit/vite-plugin-dev-banner\").then((m) =>\n            m.devBanner(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":1080},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/campaign-progress.tsx":{"content":"import { useEffect, useState } from \"react\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Card } from \"@/components/ui/card\";\n\ninterface CampaignProgressProps {\n  pledged: number;\n  goal: number;\n  builders: number;\n  deadline: Date;\n}\n\nexport function CampaignProgress({ pledged, goal, builders, deadline }: CampaignProgressProps) {\n  const [timeLeft, setTimeLeft] = useState({ years: 0, months: 0, days: 0 });\n  const percentage = (pledged / goal) * 100;\n\n  useEffect(() => {\n    const calculateTimeLeft = () => {\n      const now = new Date();\n      const diff = deadline.getTime() - now.getTime();\n      \n      if (diff > 0) {\n        const years = Math.floor(diff / (1000 * 60 * 60 * 24 * 365));\n        const months = Math.floor((diff % (1000 * 60 * 60 * 24 * 365)) / (1000 * 60 * 60 * 24 * 30));\n        const days = Math.floor((diff % (1000 * 60 * 60 * 24 * 30)) / (1000 * 60 * 60 * 24));\n        \n        setTimeLeft({ years, months, days });\n      }\n    };\n\n    calculateTimeLeft();\n    const interval = setInterval(calculateTimeLeft, 1000 * 60 * 60); // Update every hour\n    \n    return () => clearInterval(interval);\n  }, [deadline]);\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-KE', {\n      style: 'currency',\n      currency: 'KES',\n      minimumFractionDigits: 0,\n    }).format(amount);\n  };\n\n  return (\n    <Card className=\"p-6 md:p-8 bg-card\">\n      <div className=\"space-y-6\">\n        <div className=\"flex flex-col md:flex-row md:items-end md:justify-between gap-4\">\n          <div>\n            <h3 className=\"text-sm font-medium text-muted-foreground mb-2\">Progress to Milestone 1</h3>\n            <div className=\"flex items-baseline gap-2\">\n              <span className=\"text-3xl md:text-4xl font-bold font-serif text-foreground\" data-testid=\"text-pledged-amount\">\n                {formatCurrency(pledged)}\n              </span>\n              <span className=\"text-lg text-muted-foreground\">\n                of {formatCurrency(goal)}\n              </span>\n            </div>\n          </div>\n          \n          <div className=\"flex gap-6\">\n            <div>\n              <p className=\"text-2xl md:text-3xl font-bold font-serif text-primary\" data-testid=\"text-builder-count\">\n                {builders}\n              </p>\n              <p className=\"text-sm text-muted-foreground\">Builders</p>\n            </div>\n            <div>\n              <p className=\"text-2xl md:text-3xl font-bold font-serif text-primary\" data-testid=\"text-time-left\">\n                {timeLeft.years}Y {timeLeft.months}M {timeLeft.days}D\n              </p>\n              <p className=\"text-sm text-muted-foreground\">Time Left</p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"space-y-2\">\n          <Progress value={percentage} className=\"h-3\" data-testid=\"progress-campaign\" />\n          <p className=\"text-sm text-muted-foreground text-right\">\n            {percentage.toFixed(1)}% of Milestone 1 goal\n          </p>\n        </div>\n\n        <div className=\"pt-4 border-t\">\n          <p className=\"text-sm text-muted-foreground\">\n            <span className=\"font-semibold text-foreground\">Ultimate Goal:</span> KES 1.2 Billion endowment by 2040 to support 500,000 youth\n          </p>\n        </div>\n      </div>\n    </Card>\n  );\n}\n","size_bytes":3319},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/impact-story-card.tsx":{"content":"import { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { ArrowRight } from \"lucide-react\";\n\ninterface ImpactStoryCardProps {\n  title: string;\n  excerpt: string;\n  imageUrl: string;\n}\n\nexport function ImpactStoryCard({ title, excerpt, imageUrl }: ImpactStoryCardProps) {\n  return (\n    <Card className=\"overflow-hidden hover-elevate transition-all duration-300 group\">\n      <div className=\"relative h-56 overflow-hidden\">\n        <img\n          src={imageUrl}\n          alt={title}\n          className=\"w-full h-full object-cover transition-transform duration-500 group-hover:scale-110\"\n        />\n        <div className=\"absolute inset-0 bg-gradient-to-t from-black/60 to-transparent\" />\n      </div>\n\n      <CardHeader>\n        <CardTitle className=\"text-xl font-serif line-clamp-2\">{title}</CardTitle>\n      </CardHeader>\n\n      <CardContent className=\"space-y-4\">\n        <CardDescription className=\"text-sm leading-relaxed line-clamp-3\">\n          {excerpt}\n        </CardDescription>\n\n        <Button variant=\"ghost\" className=\"group/btn p-0 h-auto\" data-testid={`button-read-story-${title.toLowerCase().replace(/\\s+/g, '-')}`}>\n          <span className=\"text-sm font-medium text-primary\">Read More</span>\n          <ArrowRight className=\"ml-1 h-4 w-4 text-primary transition-transform group-hover/btn:translate-x-1\" />\n        </Button>\n      </CardContent>\n    </Card>\n  );\n}\n","size_bytes":1484},"client/src/components/theme-provider.tsx":{"content":"import { createContext, useContext, useEffect, useState } from \"react\";\n\ntype Theme = \"dark\" | \"light\";\n\ntype ThemeProviderProps = {\n  children: React.ReactNode;\n  defaultTheme?: Theme;\n  storageKey?: string;\n};\n\ntype ThemeProviderState = {\n  theme: Theme;\n  setTheme: (theme: Theme) => void;\n};\n\nconst initialState: ThemeProviderState = {\n  theme: \"light\",\n  setTheme: () => null,\n};\n\nconst ThemeProviderContext = createContext<ThemeProviderState>(initialState);\n\nexport function ThemeProvider({\n  children,\n  defaultTheme = \"light\",\n  storageKey = \"jenge-theme\",\n  ...props\n}: ThemeProviderProps) {\n  const [theme, setTheme] = useState<Theme>(\n    () => (localStorage.getItem(storageKey) as Theme) || defaultTheme\n  );\n\n  useEffect(() => {\n    const root = window.document.documentElement;\n    root.classList.remove(\"light\", \"dark\");\n    root.classList.add(theme);\n  }, [theme]);\n\n  const value = {\n    theme,\n    setTheme: (theme: Theme) => {\n      localStorage.setItem(storageKey, theme);\n      setTheme(theme);\n    },\n  };\n\n  return (\n    <ThemeProviderContext.Provider {...props} value={value}>\n      {children}\n    </ThemeProviderContext.Provider>\n  );\n}\n\nexport const useTheme = () => {\n  const context = useContext(ThemeProviderContext);\n\n  if (context === undefined)\n    throw new Error(\"useTheme must be used within a ThemeProvider\");\n\n  return context;\n};\n","size_bytes":1368},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"design_guidelines.md":{"content":"# JENGE Impact Fund Donation Platform - Design Guidelines\n\n## Design Approach: Reference-Based (New Story Homes Inspired)\n\nDrawing inspiration from New Story Homes' professional, impact-focused aesthetic while incorporating Kenya-specific visual identity and cultural elements.\n\n### Design Principles\n1. **Trust & Transparency**: Clean, professional design that conveys organizational credibility\n2. **Emotional Connection**: Compelling imagery showcasing real youth impact and solidarity\n3. **Clarity of Action**: Clear pathways to donate with immediate understanding of impact\n4. **African Pride**: Incorporate Kenya-specific colors, patterns, and cultural elements\n\n## Core Design Elements\n\n### A. Color Palette\n\n**Primary Colors (Kenya Flag Inspired)**\n- Deep Green: 145 40% 25% (primary brand, headers, CTAs)\n- Warm Red: 0 75% 45% (accents, urgency indicators)\n- Rich Black: 0 0% 10% (text, backgrounds)\n- Clean White: 0 0% 98% (backgrounds, cards)\n\n**Supporting Colors**\n- Golden Yellow: 45 90% 55% (achievement badges, tier highlights)\n- Earth Brown: 30 30% 35% (grounding elements, secondary text)\n- Soft Cream: 40 40% 95% (subtle backgrounds, card variations)\n\n**Dark Mode Palette**\n- Background: 0 0% 8%\n- Card Background: 0 0% 12%\n- Text Primary: 0 0% 95%\n- Border Subtle: 0 0% 20%\n\n### B. Typography\n\n**Font Stack**\n- **Primary**: \"Inter\" (Google Fonts) - Clean, modern sans-serif for UI elements, navigation, and body text\n- **Display**: \"Playfair Display\" (Google Fonts) - Elegant serif for hero headlines and impact statistics\n- **Accent**: \"Inter\" medium/semibold for builder tier names and key metrics\n\n**Hierarchy**\n- Hero Headlines: Playfair Display, 4xl-6xl, font-bold (responsive)\n- Section Headers: Inter, 3xl-4xl, font-semibold\n- Card Titles: Inter, xl-2xl, font-medium\n- Body Text: Inter, base-lg, font-normal, leading-relaxed\n- Impact Numbers: Playfair Display, 5xl-7xl, font-bold\n- Captions: Inter, sm, font-normal\n\n### C. Layout System\n\n**Spacing Primitives**: Use Tailwind units of 4, 6, 8, 12, 16, 20, 24 consistently\n- Micro spacing (between elements): 4, 6\n- Standard spacing (cards, sections): 8, 12, 16\n- Large spacing (section padding): 20, 24\n- Extra-large (hero sections): 32\n\n**Grid System**\n- Container: max-w-7xl for main content sections\n- Content max-width: max-w-6xl for reading-focused sections\n- Card grids: 3 columns desktop (lg:grid-cols-3), 2 tablet (md:grid-cols-2), 1 mobile\n- Asymmetric layouts for visual interest in impact stories section\n\n**Responsive Breakpoints**\n- Mobile: Default styles\n- Tablet: md: (768px+)\n- Desktop: lg: (1024px+)\n- Large Desktop: xl: (1280px+)\n\n### D. Component Library\n\n**Navigation**\n- Sticky header with logo left, navigation center, \"Donate Now\" CTA right\n- Transparent on hero with blur backdrop, white on scroll\n- Mobile: Hamburger menu with slide-in drawer\n- Include progress indicator showing campaign milestone achievement\n\n**Hero Section**\n- Full-width hero (h-screen or min-h-[600px])\n- Large background image (Kenya youth working together, creative sector activity)\n- Overlay gradient: from-black/60 to-black/30\n- Centered content with large headline, supporting text, dual CTAs\n- Campaign progress bar prominently displayed with live countdown timer\n\n**Builder Tier Cards**\n- 6 cards in responsive grid (2x3 desktop, 2x3 tablet, 1x6 mobile)\n- Each card: Tier name with icon, annual amount (large), 15-year total, key benefits list\n- Distinct colors per tier: Palladium (platinum gray), Platinum (silver), Gold (golden), Diamond (crystal blue), Silver (light gray), Bronze (copper)\n- Hover effect: subtle scale and shadow increase\n- \"Commit Now\" button prominent at bottom\n\n**Donation Pathway Cards**\n- Large feature cards (similar to New Story's \"Choose your giving journey\")\n- 3 options displayed prominently: Become a Builder, Fund a Program, Partner With Us\n- Each with: compelling image, title, description, commitment details, CTA button\n- Side-by-side layout on desktop, stacked on mobile\n\n**Statistics Display**\n- Large numbers (using Playfair Display) with supporting text\n- Grid layout: 4 stats across (75% youth, 67% unemployment, 703K jobs, 5% GDP)\n- Animated count-up on scroll into view\n- Icons for each statistic (youth icon, chart decline, briefcase, percentage)\n\n**Impact Stories Section**\n- Masonry-style or card grid layout\n- Each story: Large hero image, excerpt text, \"Read More\" link\n- Showcase real Kenya youth success stories\n- Quote pull-outs with large typography\n\n**Campaign Progress Tracker**\n- Prominent bar showing KES 1,520,000 pledged of KES 20M Milestone 1\n- Percentage completion, amount raised, goal amount\n- Visual milestone markers (showing all 60 milestones pathway to KES 1.2B)\n- Countdown timer to campaign deadline\n\n**SESS Impact Model Diagram**\n- Visual representation of Solidarity, Enterprise, Sustainability, Systems\n- Circular or interconnected design showing relationship\n- Icons for each pillar with brief description\n- Can be interactive (click to expand details)\n\n**Forms**\n- Clean, minimal design with clear labels\n- Donation amount selector: preset amounts + custom input\n- Builder tier selection dropdown\n- Payment integration (Stripe) with secure badge\n- Multi-step form for larger commitments with progress indicator\n\n**Footer**\n- Comprehensive with: About JENGE, Quick Links, Contact Info, Social Media\n- Newsletter signup section\n- Trust indicators (registration numbers, transparency commitments)\n- Kenya-inspired pattern or subtle graphic element\n\n### E. Imagery Strategy\n\n**Required Images:**\n\n1. **Hero Section**: Large, inspiring image of Kenyan youth collaborating in creative workspace or solidarity enterprise setting. Should show diversity, energy, and hope. Full-width, high-quality.\n\n2. **Donation Pathway Cards**: \n   - Builder card: Hands stacking/building together\n   - Fund a Program: Youth in workshop/training setting\n   - Partner card: Handshake or partnership visual\n\n3. **Impact Stories**: 4-6 authentic photos of JENGE beneficiaries in their work environments, showing real results\n\n4. **Statistics Section**: Background image of Kenya creative sector (can be subtle, with overlay)\n\n5. **About/Mission Section**: Community gathering or youth empowerment event\n\n6. **Testimonial/Social Proof**: Headshots of builders or beneficiaries with quotes\n\n**Image Treatment:**\n- Warm color grading favoring earth tones and Kenya's natural palette\n- Authentic, documentary-style photos (not overly staged)\n- High contrast for impact, subtle vignettes on hero images\n- Ensure diverse representation of Kenya's youth\n\n### F. Animations & Interactions\n\n**Minimal, Purposeful Animations:**\n- Progress bar fill animation on page load\n- Count-up animation for statistics on scroll\n- Smooth scroll to sections\n- Card hover: transform scale(1.02) with shadow increase\n- Button hover: subtle color shift, no dramatic effects\n- Page transitions: simple fade\n\n**Interaction Patterns:**\n- Sticky navigation with color change on scroll\n- FAQ accordion expand/collapse\n- Donation amount button selection (active state highlight)\n- Mobile menu slide-in drawer\n\n### G. Accessibility & Dark Mode\n\n**Dark Mode Implementation:**\n- Toggle in navigation (sun/moon icon)\n- All text maintains WCAG AA contrast ratios\n- Images slightly dimmed with overlay in dark mode\n- Card backgrounds: subtle dark gray (not pure black)\n- Green and red colors adjusted for dark mode visibility\n- Form inputs with proper dark backgrounds and borders\n\n**Accessibility:**\n- All interactive elements keyboard navigable\n- Focus states clearly visible (ring-2 ring-green-500)\n- Alt text for all images describing Kenya context\n- ARIA labels for icon buttons\n- Skip to main content link\n\n## Page Structure\n\n### Home Page Sections (in order):\n1. Hero with campaign headline, progress bar, CTAs\n2. Three donation pathways (large feature cards)\n3. Builder tier showcase (6-card grid)\n4. Impact statistics (4 key numbers)\n5. SESS Model explanation (visual diagram)\n6. Impact stories (masonry or card grid)\n7. FAQ accordion\n8. Contact/inquiry form\n9. Footer with comprehensive links\n\n### Visual Flow:\n- Start with emotional impact (hero image + mission)\n- Immediately show pathways to give\n- Build credibility with statistics and model\n- Inspire with real stories\n- Remove barriers with FAQ\n- Close with clear contact options\n\n**Key Differentiators from New Story:**\n- Kenya flag colors prominently featured\n- African visual patterns as subtle design elements\n- Youth-focused imagery (not housing, but employment/creativity)\n- 15-year builder commitment emphasis\n- Campaign milestone tracking prominent throughout","size_bytes":8621},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/lib/use-hash-location.ts":{"content":"import { useState, useEffect } from \"react\";\n\nexport const useHashLocation = (): [string, (to: string) => void] => {\n  const [loc, setLoc] = useState(window.location.hash.replace(/^#/, \"\") || \"/\");\n\n  useEffect(() => {\n    const handler = () => setLoc(window.location.hash.replace(/^#/, \"\") || \"/\");\n    window.addEventListener(\"hashchange\", handler);\n    return () => window.removeEventListener(\"hashchange\", handler);\n  }, []);\n\n  const navigate = (to: string) => {\n    window.location.hash = to;\n  };\n\n  return [loc, navigate];\n};\n","size_bytes":534},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/donate.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { useLocation } from \"wouter\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { builderTiers, type BuilderTierKey } from \"@shared/schema\";\nimport { Loader2, Check, Info } from \"lucide-react\";\nimport { ImpactStoryCard } from \"@/components/impact-story-card\";\n\nconst donationSchema = z.object({\n  donorName: z.string().min(2, \"Name must be at least 2 characters\"),\n  donorEmail: z.string().email(\"Invalid email address\"),\n  amount: z.number().min(100, \"Minimum donation is KES 100\"),\n  donationType: z.string(),\n  builderTier: z.string().optional(),\n  isRecurring: z.boolean().default(false),\n});\n\ntype DonationFormData = z.infer<typeof donationSchema>;\n\nexport default function Donate() {\n  const [location] = useLocation();\n  const { toast } = useToast();\n  const [selectedType, setSelectedType] = useState<string>(\"builder\");\n  const [selectedTier, setSelectedTier] = useState<BuilderTierKey | null>(null);\n  const [customAmount, setCustomAmount] = useState<number | null>(null);\n\n  const form = useForm<DonationFormData>({\n    resolver: zodResolver(donationSchema),\n    defaultValues: {\n      donorName: \"\",\n      donorEmail: \"\",\n      amount: selectedTier ? builderTiers[selectedTier].annualAmount : 1000,\n      donationType: selectedType,\n      builderTier: selectedTier || undefined,\n      isRecurring: selectedType === 'builder',\n    },\n  });\n\n  useEffect(() => {\n    const hash = window.location.hash;\n    const searchIndex = hash.indexOf('?');\n    const search = searchIndex >= 0 ? hash.substring(searchIndex) : '';\n    const params = new URLSearchParams(search);\n    const type = params.get('type');\n    const tier = params.get('tier') as BuilderTierKey;\n    \n    if (type) {\n      setSelectedType(type);\n      form.setValue('donationType', type);\n      form.setValue('isRecurring', type === 'builder');\n      \n      if (type !== 'builder') {\n        setSelectedTier(null);\n        form.setValue('builderTier', undefined);\n      }\n    }\n    \n    if (tier && builderTiers[tier]) {\n      setSelectedTier(tier);\n      form.setValue('builderTier', tier);\n      form.setValue('amount', builderTiers[tier].annualAmount);\n      setCustomAmount(null);\n    }\n  }, [location, form]);\n\n  const mutation = useMutation({\n    mutationFn: async (data: DonationFormData) => {\n      return new Promise((resolve, reject) => {\n        const initializePaystack = () => {\n          const PaystackPop = (window as any).PaystackPop;\n          if (!PaystackPop) {\n            reject(new Error(\"Paystack failed to load. Please refresh and try again.\"));\n            return;\n          }\n\n          const handler = PaystackPop.setup({\n            key: import.meta.env.VITE_PAYSTACK_PUBLIC_KEY || 'pk_test_xxxxx',\n            email: data.donorEmail,\n            amount: data.amount * 100,\n            currency: 'KES',\n            ref: `JENGE_${Date.now()}`,\n            metadata: {\n              custom_fields: [\n                {\n                  display_name: \"Donor Name\",\n                  variable_name: \"donor_name\",\n                  value: data.donorName\n                },\n                {\n                  display_name: \"Donation Type\",\n                  variable_name: \"donation_type\",\n                  value: data.donationType\n                },\n                {\n                  display_name: \"Builder Tier\",\n                  variable_name: \"builder_tier\",\n                  value: data.builderTier || \"N/A\"\n                }\n              ]\n            },\n            onClose: function() {\n              reject(new Error(\"Payment cancelled\"));\n            },\n            callback: function(response: any) {\n              resolve(response);\n              toast({\n                title: \"Payment Successful!\",\n                description: `Thank you ${data.donorName} for your ${data.donationType === 'builder' ? 'builder commitment' : 'donation'}! Reference: ${response.reference}`,\n              });\n            },\n          });\n\n          handler.openIframe();\n        };\n\n        const loadPaystackScript = () => {\n          if ((window as any).PaystackPop) {\n            initializePaystack();\n            return;\n          }\n\n          const script = document.createElement('script');\n          script.src = 'https://js.paystack.co/v2/inline.js';\n          script.async = true;\n          \n          const timeout = setTimeout(() => {\n            script.remove();\n            reject(new Error(\"Paystack script timed out. Please check your connection and try again.\"));\n          }, 10000);\n\n          script.onload = () => {\n            clearTimeout(timeout);\n            let attempts = 0;\n            const checkLoaded = () => {\n              if ((window as any).PaystackPop) {\n                initializePaystack();\n              } else if (attempts < 30) {\n                attempts++;\n                setTimeout(checkLoaded, 100);\n              } else {\n                reject(new Error(\"Paystack failed to initialize. Please refresh and try again.\"));\n              }\n            };\n            checkLoaded();\n          };\n\n          script.onerror = () => {\n            clearTimeout(timeout);\n            script.remove();\n            reject(new Error(\"Failed to load Paystack. Please check your internet connection.\"));\n          };\n\n          document.body.appendChild(script);\n        };\n\n        loadPaystackScript();\n      });\n    },\n    onSuccess: () => {\n      form.reset();\n      setSelectedTier(null);\n      setCustomAmount(null);\n    },\n    onError: (error: any) => {\n      if (error.message !== \"Payment cancelled\") {\n        toast({\n          title: \"Payment Failed\",\n          description: \"There was an error processing your payment. Please try again.\",\n          variant: \"destructive\",\n        });\n      }\n    },\n  });\n\n  const onSubmit = (data: DonationFormData) => {\n    mutation.mutate(data);\n  };\n\n  const handleTypeChange = (type: string) => {\n    setSelectedType(type);\n    form.setValue('donationType', type);\n    form.setValue('isRecurring', type === 'builder');\n    \n    if (type !== 'builder') {\n      setSelectedTier(null);\n      form.setValue('builderTier', undefined);\n    }\n  };\n\n  const handleTierChange = (tier: BuilderTierKey) => {\n    setSelectedTier(tier);\n    form.setValue('builderTier', tier);\n    form.setValue('amount', builderTiers[tier].annualAmount);\n    setCustomAmount(null);\n  };\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-KE', {\n      style: 'currency',\n      currency: 'KES',\n      minimumFractionDigits: 0,\n    }).format(amount);\n  };\n\n  const impactStories = [\n    {\n      title: \"Your Support Transforms Lives\",\n      excerpt: \"Every contribution helps young creators access resources, training, and market opportunities that lead to sustainable income.\",\n      imageUrl: \"https://images.unsplash.com/photo-1559027615-cd4628902d4a?w=800&q=80\",\n    },\n    {\n      title: \"Building Stronger Communities\",\n      excerpt: \"Solidarity-driven enterprises create ripple effects, strengthening entire communities through shared success.\",\n      imageUrl: \"https://images.unsplash.com/photo-1522071820081-009f0129c71c?w=800&q=80\",\n    },\n    {\n      title: \"Sustainable Impact for Generations\",\n      excerpt: \"Your endowment contribution creates lasting change that will benefit Kenya's youth for decades to come.\",\n      imageUrl: \"https://images.unsplash.com/photo-1529070538774-1843cb3265df?w=800&q=80\",\n    },\n  ];\n\n  return (\n    <div className=\"min-h-screen pt-16\">\n      {/* Hero Section */}\n      <section className=\"py-12 md:py-16 bg-accent/30\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center max-w-3xl mx-auto\">\n            <h1 className=\"text-4xl md:text-5xl font-serif font-bold mb-4\">\n              Get Started with Your Contribution\n            </h1>\n            <p className=\"text-lg text-muted-foreground\">\n              Choose how you'd like to support the JENGE Impact Fund and help transform the lives of 500,000 Kenyan youth\n            </p>\n          </div>\n        </div>\n      </section>\n\n      {/* Donation Form Section */}\n      <section className=\"py-12 md:py-16\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n            {/* Main Form */}\n            <div className=\"lg:col-span-2\">\n              <Card className=\"p-6 md:p-8\">\n                <CardHeader className=\"px-0 pt-0\">\n                  <CardTitle className=\"text-2xl font-serif\">Make Your Contribution</CardTitle>\n                  <CardDescription>\n                    Select your donation type and complete the secure payment process\n                  </CardDescription>\n                </CardHeader>\n\n                <CardContent className=\"px-0 pb-0\">\n                  <Form {...form}>\n                    <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n                      {/* Donation Type Selection */}\n                      <div className=\"space-y-3\">\n                        <label className=\"text-sm font-medium\">Choose Your Giving Path</label>\n                        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-3\">\n                          <Button\n                            type=\"button\"\n                            variant={selectedType === 'builder' ? 'default' : 'outline'}\n                            className=\"h-auto py-4 px-4 flex flex-col items-start\"\n                            onClick={() => handleTypeChange('builder')}\n                            data-testid=\"button-type-builder\"\n                          >\n                            <span className=\"font-semibold mb-1\">Become a Builder</span>\n                            <span className=\"text-xs opacity-90\">15-year commitment</span>\n                          </Button>\n\n                          <Button\n                            type=\"button\"\n                            variant={selectedType === 'program' ? 'default' : 'outline'}\n                            className=\"h-auto py-4 px-4 flex flex-col items-start\"\n                            onClick={() => handleTypeChange('program')}\n                            data-testid=\"button-type-program\"\n                          >\n                            <span className=\"font-semibold mb-1\">Fund a Program</span>\n                            <span className=\"text-xs opacity-90\">One-time donation</span>\n                          </Button>\n\n                          <Button\n                            type=\"button\"\n                            variant={selectedType === 'partner' ? 'default' : 'outline'}\n                            className=\"h-auto py-4 px-4 flex flex-col items-start\"\n                            onClick={() => handleTypeChange('partner')}\n                            data-testid=\"button-type-partner\"\n                          >\n                            <span className=\"font-semibold mb-1\">Partner With Us</span>\n                            <span className=\"text-xs opacity-90\">Collaboration</span>\n                          </Button>\n                        </div>\n                      </div>\n\n                      {/* Builder Tier Selection */}\n                      {selectedType === 'builder' && (\n                        <div className=\"space-y-3\">\n                          <label className=\"text-sm font-medium\">Select Your Builder Tier</label>\n                          <div className=\"grid grid-cols-2 md:grid-cols-3 gap-3\">\n                            {Object.entries(builderTiers).map(([key, tier]) => (\n                              <Button\n                                key={key}\n                                type=\"button\"\n                                variant={selectedTier === key ? 'default' : 'outline'}\n                                className=\"h-auto py-3 px-3 flex flex-col items-start\"\n                                onClick={() => handleTierChange(key as BuilderTierKey)}\n                                data-testid={`button-select-${key}`}\n                              >\n                                <span className=\"text-lg mb-1\">{tier.icon}</span>\n                                <span className=\"text-xs font-semibold mb-1\">{tier.name.split(' ')[0]}</span>\n                                <span className=\"text-xs opacity-90\">{formatCurrency(tier.annualAmount)}/yr</span>\n                              </Button>\n                            ))}\n                          </div>\n                        </div>\n                      )}\n\n                      {/* Personal Information */}\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                        <FormField\n                          control={form.control}\n                          name=\"donorName\"\n                          render={({ field }) => (\n                            <FormItem>\n                              <FormLabel>Full Name</FormLabel>\n                              <FormControl>\n                                <Input placeholder=\"John Doe\" {...field} data-testid=\"input-donor-name\" />\n                              </FormControl>\n                              <FormMessage />\n                            </FormItem>\n                          )}\n                        />\n\n                        <FormField\n                          control={form.control}\n                          name=\"donorEmail\"\n                          render={({ field }) => (\n                            <FormItem>\n                              <FormLabel>Email Address</FormLabel>\n                              <FormControl>\n                                <Input type=\"email\" placeholder=\"john@example.com\" {...field} data-testid=\"input-donor-email\" />\n                              </FormControl>\n                              <FormMessage />\n                            </FormItem>\n                          )}\n                        />\n                      </div>\n\n                      {/* Amount */}\n                      <FormField\n                        control={form.control}\n                        name=\"amount\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>Donation Amount (KES)</FormLabel>\n                            <FormControl>\n                              <Input\n                                type=\"number\"\n                                placeholder=\"1000\"\n                                {...field}\n                                onChange={(e) => {\n                                  const value = parseFloat(e.target.value);\n                                  field.onChange(value);\n                                  setCustomAmount(value);\n                                }}\n                                data-testid=\"input-amount\"\n                              />\n                            </FormControl>\n                            <FormDescription>\n                              {selectedType === 'builder' && selectedTier\n                                ? `Suggested: ${formatCurrency(builderTiers[selectedTier].annualAmount)} annually for your selected tier`\n                                : 'Enter any amount (minimum KES 100)'}\n                            </FormDescription>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n\n                      {/* Submit Button */}\n                      <div className=\"pt-4\">\n                        <Button\n                          type=\"submit\"\n                          size=\"lg\"\n                          className=\"w-full\"\n                          disabled={mutation.isPending}\n                          data-testid=\"button-proceed-payment\"\n                        >\n                          {mutation.isPending && <Loader2 className=\"mr-2 h-5 w-5 animate-spin\" />}\n                          {mutation.isPending ? \"Processing...\" : \"Proceed to Secure Payment\"}\n                        </Button>\n                        <p className=\"text-xs text-center text-muted-foreground mt-3\">\n                          Secure payment powered by Paystack\n                        </p>\n                      </div>\n                    </form>\n                  </Form>\n                </CardContent>\n              </Card>\n            </div>\n\n            {/* Sidebar */}\n            <div className=\"space-y-6\">\n              {/* Summary Card */}\n              <Card className=\"p-6 bg-accent/30\">\n                <h3 className=\"font-semibold text-lg mb-4\">Your Impact</h3>\n                <div className=\"space-y-3\">\n                  {selectedType === 'builder' && selectedTier && (\n                    <>\n                      <div className=\"flex justify-between items-center pb-3 border-b\">\n                        <span className=\"text-sm text-muted-foreground\">Builder Tier</span>\n                        <Badge variant=\"secondary\">{builderTiers[selectedTier].name.split(' ')[0]}</Badge>\n                      </div>\n                      <div className=\"flex justify-between items-center pb-3 border-b\">\n                        <span className=\"text-sm text-muted-foreground\">Annual Contribution</span>\n                        <span className=\"font-semibold\">{formatCurrency(builderTiers[selectedTier].annualAmount)}</span>\n                      </div>\n                      <div className=\"flex justify-between items-center pb-3 border-b\">\n                        <span className=\"text-sm text-muted-foreground\">15-Year Total</span>\n                        <span className=\"font-bold text-primary\">{formatCurrency(builderTiers[selectedTier].annualAmount * 15)}</span>\n                      </div>\n                    </>\n                  )}\n                  \n                  <div className=\"pt-3 space-y-2\">\n                    <div className=\"flex items-start gap-2\">\n                      <Check className=\"h-4 w-4 text-primary mt-0.5 flex-shrink-0\" />\n                      <p className=\"text-sm text-muted-foreground\">Quarterly impact reports</p>\n                    </div>\n                    <div className=\"flex items-start gap-2\">\n                      <Check className=\"h-4 w-4 text-primary mt-0.5 flex-shrink-0\" />\n                      <p className=\"text-sm text-muted-foreground\">Support solidarity enterprises</p>\n                    </div>\n                    <div className=\"flex items-start gap-2\">\n                      <Check className=\"h-4 w-4 text-primary mt-0.5 flex-shrink-0\" />\n                      <p className=\"text-sm text-muted-foreground\">Tax-deductible receipt</p>\n                    </div>\n                  </div>\n                </div>\n              </Card>\n\n              {/* Security Info */}\n              <Card className=\"p-6\">\n                <div className=\"flex items-start gap-3\">\n                  <div className=\"w-10 h-10 bg-primary/10 rounded-full flex items-center justify-center flex-shrink-0\">\n                    <Info className=\"h-5 w-5 text-primary\" />\n                  </div>\n                  <div>\n                    <h4 className=\"font-semibold mb-2\">Secure Payment</h4>\n                    <p className=\"text-sm text-muted-foreground\">\n                      All transactions are processed securely through Paystack. Your payment information is encrypted and never stored on our servers.\n                    </p>\n                  </div>\n                </div>\n              </Card>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* See Your Contribution in Action */}\n      <section className=\"py-16 md:py-24 bg-accent/30\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl md:text-4xl font-serif font-bold mb-4\">\n              See Your Contribution in Action\n            </h2>\n            <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\">\n              Your generosity creates real, measurable impact in the lives of young Kenyans\n            </p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {impactStories.map((story, index) => (\n              <ImpactStoryCard key={index} {...story} />\n            ))}\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n","size_bytes":21098},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/faq-section.tsx":{"content":"import {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"@/components/ui/accordion\";\n\nconst faqs = [\n  {\n    question: \"How is the JENGE Impact Fund different from other youth programs?\",\n    answer: \"The JENGE Impact Fund focuses on solidarity-driven enterprises and cooperatives, emphasizing collective strength over individual support. We build sustainable systems that benefit entire communities of young creators and professionals in the creative economy.\",\n  },\n  {\n    question: \"How do I become a Builder?\",\n    answer: \"Choose a Builder tier that matches your capacity (from KES 1,000 to KES 25,000 annually), make a 15-year commitment, and complete the donation process. You'll receive quarterly updates on the impact of your contribution and recognition as a Builder supporting youth economic transformation.\",\n  },\n  {\n    question: \"Can I make a one-time donation instead of a long-term pledge?\",\n    answer: \"Yes! You can make a one-time donation to fund specific programs or support our operational expenses. While Builder pledges create sustained impact through our endowment, one-time donations help us meet immediate program needs.\",\n  },\n  {\n    question: \"How will my donation be used?\",\n    answer: \"Builder pledges contribute to our KES 1.2 billion endowment fund, which provides sustainable support for collectives, cooperatives, and solidarity enterprises. The endowment generates ongoing income to fund shared benefits, services, and resources that help young people achieve sustainable livelihoods.\",\n  },\n  {\n    question: \"What is the SESS Impact Model?\",\n    answer: \"SESS stands for Solidarity, Enterprise, Sustainability, and Systems. It's our strategic framework for catalyzing resilient and inclusive local economies. Each component builds on the previous one, creating a reinforcing loop that drives lasting socio-economic impact for Africa's youth.\",\n  },\n  {\n    question: \"Can I partner with JENGE as an organization?\",\n    answer: \"Absolutely! We welcome corporate and institutional partners who want to support youth economic empowerment. Contact us to discuss partnership opportunities, which can include program sponsorship, technical support, or collaborative initiatives.\",\n  },\n  {\n    question: \"Will I receive tax benefits for my donation?\",\n    answer: \"Tax implications depend on your local tax laws. We recommend consulting with a tax advisor in your jurisdiction. JENGE Kulture is registered as [registration details], and we can provide donation receipts for tax purposes.\",\n  },\n  {\n    question: \"How can I track the impact of my contribution?\",\n    answer: \"All donors receive quarterly impact reports showing how contributions are being used and the outcomes achieved. Builders receive detailed updates on endowment growth, enterprises supported, and youth beneficiaries reached.\",\n  },\n];\n\nexport function FAQSection() {\n  return (\n    <section className=\"py-16 md:py-24\">\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-12\">\n          <h2 className=\"text-3xl md:text-4xl font-serif font-bold mb-4\">\n            Frequently Asked Questions\n          </h2>\n          <p className=\"text-lg text-muted-foreground\">\n            Everything you need to know about supporting the JENGE Impact Fund\n          </p>\n        </div>\n\n        <Accordion type=\"single\" collapsible className=\"w-full space-y-4\">\n          {faqs.map((faq, index) => (\n            <AccordionItem\n              key={index}\n              value={`item-${index}`}\n              className=\"bg-card rounded-lg px-6 border\"\n              data-testid={`faq-item-${index}`}\n            >\n              <AccordionTrigger className=\"text-left font-medium hover:no-underline py-4\">\n                {faq.question}\n              </AccordionTrigger>\n              <AccordionContent className=\"text-muted-foreground pb-4\">\n                {faq.answer}\n              </AccordionContent>\n            </AccordionItem>\n          ))}\n        </Accordion>\n      </div>\n    </section>\n  );\n}\n","size_bytes":4074},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/builder-tier-card.tsx":{"content":"import { Link } from \"wouter\";\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Check } from \"lucide-react\";\nimport { builderTiers, type BuilderTierKey } from \"@shared/schema\";\nimport { cn } from \"@/lib/utils\";\n\ninterface BuilderTierCardProps {\n  tierKey: BuilderTierKey;\n}\n\nexport function BuilderTierCard({ tierKey }: BuilderTierCardProps) {\n  const tier = builderTiers[tierKey];\n  const totalContribution = tier.annualAmount * 15;\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-KE', {\n      style: 'currency',\n      currency: 'KES',\n      minimumFractionDigits: 0,\n    }).format(amount);\n  };\n\n  return (\n    <Card className={cn(\"hover-elevate transition-all duration-300 h-full flex flex-col\")}>\n      <CardHeader className=\"space-y-3\">\n        <div className=\"flex items-center justify-between\">\n          <span className=\"text-3xl\">{tier.icon}</span>\n          <Badge variant=\"secondary\" className=\"text-xs\">\n            15 Years\n          </Badge>\n        </div>\n        <div>\n          <CardTitle className=\"text-xl font-serif mb-2\">{tier.name}</CardTitle>\n          <CardDescription className=\"text-sm\">\n            Annual commitment for building lasting impact\n          </CardDescription>\n        </div>\n      </CardHeader>\n\n      <CardContent className=\"flex-1 space-y-4\">\n        <div className=\"space-y-2\">\n          <div className=\"flex items-baseline gap-2\">\n            <span className=\"text-3xl font-bold font-serif text-primary\" data-testid={`text-annual-${tierKey}`}>\n              {formatCurrency(tier.annualAmount)}\n            </span>\n            <span className=\"text-sm text-muted-foreground\">/ year</span>\n          </div>\n          <p className=\"text-sm text-muted-foreground\">\n            Total pledge: <span className=\"font-semibold text-foreground\">{formatCurrency(totalContribution)}</span>\n          </p>\n        </div>\n\n        <div className=\"space-y-2 pt-4\">\n          <div className=\"flex items-start gap-2\">\n            <Check className=\"h-4 w-4 text-primary mt-0.5 flex-shrink-0\" />\n            <p className=\"text-sm text-muted-foreground\">Support solidarity-driven enterprises</p>\n          </div>\n          <div className=\"flex items-start gap-2\">\n            <Check className=\"h-4 w-4 text-primary mt-0.5 flex-shrink-0\" />\n            <p className=\"text-sm text-muted-foreground\">Quarterly impact updates</p>\n          </div>\n          <div className=\"flex items-start gap-2\">\n            <Check className=\"h-4 w-4 text-primary mt-0.5 flex-shrink-0\" />\n            <p className=\"text-sm text-muted-foreground\">Recognition as a Builder</p>\n          </div>\n        </div>\n      </CardContent>\n\n      <CardFooter>\n        <Link href={`/donate?tier=${tierKey}`} className=\"w-full\">\n          <Button variant=\"default\" className=\"w-full\" data-testid={`button-commit-${tierKey}`}>\n            Commit Now\n          </Button>\n        </Link>\n      </CardFooter>\n    </Card>\n  );\n}\n","size_bytes":3119},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(`\n      after:content-[''] after:block after:absolute after:inset-0 after:rounded-full after:pointer-events-none after:border after:border-black/10 dark:after:border-white/10\n      relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full`,\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1592},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"shadcn-card rounded-xl border bg-card border-card-border text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n));\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n));\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n));\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n}\n","size_bytes":1904},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/App.tsx":{"content":"import { Switch, Route, Router as WouterRouter } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { ThemeProvider } from \"@/components/theme-provider\";\nimport { Navigation } from \"@/components/navigation\";\nimport { Footer } from \"@/components/footer\";\nimport Home from \"@/pages/home\";\nimport About from \"@/pages/about\";\nimport Donate from \"@/pages/donate\";\nimport NotFound from \"@/pages/not-found\";\nimport { useHashLocation } from \"@/lib/use-hash-location\";\n\nfunction Router() {\n  return (\n    <WouterRouter hook={useHashLocation}>\n      <Switch>\n        <Route path=\"/\" component={Home} />\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/donate\" component={Donate} />\n        <Route component={NotFound} />\n      </Switch>\n    </WouterRouter>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider defaultTheme=\"light\">\n        <TooltipProvider>\n          <div className=\"min-h-screen flex flex-col\">\n            <Navigation />\n            <main className=\"flex-1\">\n              <Router />\n            </main>\n            <Footer />\n          </div>\n          <Toaster />\n        </TooltipProvider>\n      </ThemeProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":1445},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2066},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/theme-toggle.tsx":{"content":"import { Moon, Sun } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { useTheme } from \"@/components/theme-provider\";\n\nexport function ThemeToggle() {\n  const { theme, setTheme } = useTheme();\n\n  return (\n    <Button\n      variant=\"ghost\"\n      size=\"icon\"\n      onClick={() => setTheme(theme === \"light\" ? \"dark\" : \"light\")}\n      data-testid=\"button-theme-toggle\"\n    >\n      <Sun className=\"h-5 w-5 rotate-0 scale-100 transition-all dark:-rotate-90 dark:scale-0\" />\n      <Moon className=\"absolute h-5 w-5 rotate-90 scale-0 transition-all dark:rotate-0 dark:scale-100\" />\n      <span className=\"sr-only\">Toggle theme</span>\n    </Button>\n  );\n}\n","size_bytes":677},"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"client/src/components/footer.tsx":{"content":"import { Link } from \"wouter\";\nimport { Facebook, Twitter, Instagram, Linkedin, Mail, MapPin, Phone } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\n\nexport function Footer() {\n  const handleNewsletterSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    // Newsletter subscription logic would go here\n  };\n\n  return (\n    <footer className=\"bg-card border-t mt-20\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n          {/* About Section */}\n          <div>\n            <div className=\"flex items-center space-x-3 mb-4\">\n              <div className=\"flex items-center justify-center w-10 h-10 rounded-md bg-primary text-primary-foreground font-bold text-xl\">\n                J\n              </div>\n              <span className=\"font-serif font-bold text-lg\">JENGE Impact Fund</span>\n            </div>\n            <p className=\"text-sm text-muted-foreground leading-relaxed\">\n              Building a KES 1.2 billion endowment fund to support 500,000 Kenyan youth achieve sustainable income through solidarity-driven enterprises.\n            </p>\n            <div className=\"flex space-x-3 mt-4\">\n              <Button variant=\"ghost\" size=\"icon\" className=\"h-9 w-9\" data-testid=\"button-social-facebook\">\n                <Facebook className=\"h-4 w-4\" />\n              </Button>\n              <Button variant=\"ghost\" size=\"icon\" className=\"h-9 w-9\" data-testid=\"button-social-twitter\">\n                <Twitter className=\"h-4 w-4\" />\n              </Button>\n              <Button variant=\"ghost\" size=\"icon\" className=\"h-9 w-9\" data-testid=\"button-social-instagram\">\n                <Instagram className=\"h-4 w-4\" />\n              </Button>\n              <Button variant=\"ghost\" size=\"icon\" className=\"h-9 w-9\" data-testid=\"button-social-linkedin\">\n                <Linkedin className=\"h-4 w-4\" />\n              </Button>\n            </div>\n          </div>\n\n          {/* Quick Links */}\n          <div>\n            <h3 className=\"font-semibold text-base mb-4\">Quick Links</h3>\n            <ul className=\"space-y-2\">\n              <li>\n                <Link href=\"/\">\n                  <a className=\"text-sm text-muted-foreground hover:text-primary transition-colors\" data-testid=\"link-footer-home\">Home</a>\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/about\">\n                  <a className=\"text-sm text-muted-foreground hover:text-primary transition-colors\" data-testid=\"link-footer-about\">About Us</a>\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/donate\">\n                  <a className=\"text-sm text-muted-foreground hover:text-primary transition-colors\" data-testid=\"link-footer-donate\">Donate</a>\n                </Link>\n              </li>\n              <li>\n                <a href=\"#\" className=\"text-sm text-muted-foreground hover:text-primary transition-colors\" data-testid=\"link-footer-impact\">Our Impact</a>\n              </li>\n            </ul>\n          </div>\n\n          {/* Contact Info */}\n          <div>\n            <h3 className=\"font-semibold text-base mb-4\">Contact Us</h3>\n            <ul className=\"space-y-3\">\n              <li className=\"flex items-start space-x-2\">\n                <MapPin className=\"h-4 w-4 text-muted-foreground mt-0.5\" />\n                <span className=\"text-sm text-muted-foreground\">Nairobi, Kenya</span>\n              </li>\n              <li className=\"flex items-start space-x-2\">\n                <Mail className=\"h-4 w-4 text-muted-foreground mt-0.5\" />\n                <span className=\"text-sm text-muted-foreground\">info@jengekulture.org</span>\n              </li>\n              <li className=\"flex items-start space-x-2\">\n                <Phone className=\"h-4 w-4 text-muted-foreground mt-0.5\" />\n                <span className=\"text-sm text-muted-foreground\">+254 XXX XXX XXX</span>\n              </li>\n            </ul>\n          </div>\n\n          {/* Newsletter */}\n          <div>\n            <h3 className=\"font-semibold text-base mb-4\">Stay Updated</h3>\n            <p className=\"text-sm text-muted-foreground mb-3\">\n              Subscribe to receive updates on our progress and impact.\n            </p>\n            <form onSubmit={handleNewsletterSubmit} className=\"space-y-2\">\n              <Input\n                type=\"email\"\n                placeholder=\"Your email\"\n                className=\"h-9\"\n                data-testid=\"input-newsletter-email\"\n              />\n              <Button type=\"submit\" className=\"w-full\" size=\"sm\" data-testid=\"button-newsletter-subscribe\">\n                Subscribe\n              </Button>\n            </form>\n          </div>\n        </div>\n\n        <div className=\"border-t mt-8 pt-8 flex flex-col md:flex-row justify-between items-center space-y-4 md:space-y-0\">\n          <p className=\"text-sm text-muted-foreground\">\n            © 2025 JENGE Kulture. All rights reserved.\n          </p>\n          <div className=\"flex space-x-6\">\n            <a href=\"#\" className=\"text-sm text-muted-foreground hover:text-primary transition-colors\">\n              Privacy Policy\n            </a>\n            <a href=\"#\" className=\"text-sm text-muted-foreground hover:text-primary transition-colors\">\n              Terms of Service\n            </a>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n}\n","size_bytes":5490},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, integer, timestamp, boolean } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\n// Donation schema for tracking all donations\nexport const donations = pgTable(\"donations\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  donorName: text(\"donor_name\").notNull(),\n  donorEmail: text(\"donor_email\").notNull(),\n  amount: integer(\"amount\").notNull(), // Amount in KES\n  donationType: text(\"donation_type\").notNull(), // 'builder', 'program', 'operations', 'partner'\n  builderTier: text(\"builder_tier\"), // 'palladium', 'platinum', 'gold', 'diamond', 'silver', 'bronze'\n  isRecurring: boolean(\"is_recurring\").default(false),\n  paystackReference: text(\"paystack_reference\"),\n  status: text(\"status\").notNull().default('pending'), // 'pending', 'success', 'failed'\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\n// Builder pledges for long-term commitments\nexport const builderPledges = pgTable(\"builder_pledges\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  donorName: text(\"donor_name\").notNull(),\n  donorEmail: text(\"donor_email\").notNull(),\n  builderTier: text(\"builder_tier\").notNull(),\n  annualAmount: integer(\"annual_amount\").notNull(),\n  yearsCommitted: integer(\"years_committed\").default(15),\n  totalPledged: integer(\"total_pledged\").notNull(),\n  paystackReference: text(\"paystack_reference\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\n// Contact inquiries\nexport const inquiries = pgTable(\"inquiries\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  firstName: text(\"first_name\").notNull(),\n  lastName: text(\"last_name\").notNull(),\n  email: text(\"email\").notNull(),\n  message: text(\"message\").notNull(),\n  inquiryType: text(\"inquiry_type\").default('general'), // 'general', 'partnership', 'builder'\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\n// Impact stories\nexport const stories = pgTable(\"stories\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  title: text(\"title\").notNull(),\n  excerpt: text(\"excerpt\").notNull(),\n  imageUrl: text(\"image_url\"),\n  content: text(\"content\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\n// Schemas and types\nexport const insertDonationSchema = createInsertSchema(donations).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertBuilderPledgeSchema = createInsertSchema(builderPledges).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertInquirySchema = createInsertSchema(inquiries).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertStorySchema = createInsertSchema(stories).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport type InsertDonation = z.infer<typeof insertDonationSchema>;\nexport type Donation = typeof donations.$inferSelect;\n\nexport type InsertBuilderPledge = z.infer<typeof insertBuilderPledgeSchema>;\nexport type BuilderPledge = typeof builderPledges.$inferSelect;\n\nexport type InsertInquiry = z.infer<typeof insertInquirySchema>;\nexport type Inquiry = typeof inquiries.$inferSelect;\n\nexport type InsertStory = z.infer<typeof insertStorySchema>;\nexport type Story = typeof stories.$inferSelect;\n\n// Builder tier configuration\nexport const builderTiers = {\n  palladium: {\n    name: 'Palladium Rock Builders',\n    annualAmount: 25000,\n    color: 'from-gray-400 to-gray-600',\n    icon: '💎',\n  },\n  platinum: {\n    name: 'Platinum Rock Builders',\n    annualAmount: 20000,\n    color: 'from-gray-300 to-gray-500',\n    icon: '🏆',\n  },\n  gold: {\n    name: 'Gold Rock Builders',\n    annualAmount: 10000,\n    color: 'from-yellow-400 to-yellow-600',\n    icon: '👑',\n  },\n  diamond: {\n    name: 'Diamond Rock Builders',\n    annualAmount: 5000,\n    color: 'from-blue-400 to-blue-600',\n    icon: '💠',\n  },\n  silver: {\n    name: 'Silver Rock Builders',\n    annualAmount: 2000,\n    color: 'from-gray-200 to-gray-400',\n    icon: '⭐',\n  },\n  bronze: {\n    name: 'Bronze Rock Builders',\n    annualAmount: 1000,\n    color: 'from-orange-400 to-orange-600',\n    icon: '🥉',\n  },\n} as const;\n\nexport type BuilderTierKey = keyof typeof builderTiers;\n","size_bytes":4185},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \".5625rem\", /* 9px */\n        md: \".375rem\", /* 6px */\n        sm: \".1875rem\", /* 3px */\n      },\n      colors: {\n        // Flat / base colors (regular buttons)\n        background: \"hsl(var(--background) / <alpha-value>)\",\n        foreground: \"hsl(var(--foreground) / <alpha-value>)\",\n        border: \"hsl(var(--border) / <alpha-value>)\",\n        input: \"hsl(var(--input) / <alpha-value>)\",\n        card: {\n          DEFAULT: \"hsl(var(--card) / <alpha-value>)\",\n          foreground: \"hsl(var(--card-foreground) / <alpha-value>)\",\n          border: \"hsl(var(--card-border) / <alpha-value>)\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover) / <alpha-value>)\",\n          foreground: \"hsl(var(--popover-foreground) / <alpha-value>)\",\n          border: \"hsl(var(--popover-border) / <alpha-value>)\",\n        },\n        primary: {\n          DEFAULT: \"hsl(var(--primary) / <alpha-value>)\",\n          foreground: \"hsl(var(--primary-foreground) / <alpha-value>)\",\n          border: \"var(--primary-border)\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary) / <alpha-value>)\",\n          foreground: \"hsl(var(--secondary-foreground) / <alpha-value>)\",\n          border: \"var(--secondary-border)\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted) / <alpha-value>)\",\n          foreground: \"hsl(var(--muted-foreground) / <alpha-value>)\",\n          border: \"var(--muted-border)\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent) / <alpha-value>)\",\n          foreground: \"hsl(var(--accent-foreground) / <alpha-value>)\",\n          border: \"var(--accent-border)\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive) / <alpha-value>)\",\n          foreground: \"hsl(var(--destructive-foreground) / <alpha-value>)\",\n          border: \"var(--destructive-border)\",\n        },\n        ring: \"hsl(var(--ring) / <alpha-value>)\",\n        chart: {\n          \"1\": \"hsl(var(--chart-1) / <alpha-value>)\",\n          \"2\": \"hsl(var(--chart-2) / <alpha-value>)\",\n          \"3\": \"hsl(var(--chart-3) / <alpha-value>)\",\n          \"4\": \"hsl(var(--chart-4) / <alpha-value>)\",\n          \"5\": \"hsl(var(--chart-5) / <alpha-value>)\",\n        },\n        sidebar: {\n          ring: \"hsl(var(--sidebar-ring) / <alpha-value>)\",\n          DEFAULT: \"hsl(var(--sidebar) / <alpha-value>)\",\n          foreground: \"hsl(var(--sidebar-foreground) / <alpha-value>)\",\n          border: \"hsl(var(--sidebar-border) / <alpha-value>)\",\n        },\n        \"sidebar-primary\": {\n          DEFAULT: \"hsl(var(--sidebar-primary) / <alpha-value>)\",\n          foreground: \"hsl(var(--sidebar-primary-foreground) / <alpha-value>)\",\n          border: \"var(--sidebar-primary-border)\",\n        },\n        \"sidebar-accent\": {\n          DEFAULT: \"hsl(var(--sidebar-accent) / <alpha-value>)\",\n          foreground: \"hsl(var(--sidebar-accent-foreground) / <alpha-value>)\",\n          border: \"var(--sidebar-accent-border)\"\n        },\n        status: {\n          online: \"rgb(34 197 94)\",\n          away: \"rgb(245 158 11)\",\n          busy: \"rgb(239 68 68)\",\n          offline: \"rgb(156 163 175)\",\n        },\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: { height: \"0\" },\n          to: { height: \"var(--radix-accordion-content-height)\" },\n        },\n        \"accordion-up\": {\n          from: { height: \"var(--radix-accordion-content-height)\" },\n          to: { height: \"0\" },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":4050},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"replit.md":{"content":"# JENGE Impact Fund - WE BUILD Campaign Platform\n\n## Overview\nProfessional donation platform for JENGE Impact Fund, a Kenyan youth employment endowment fund. The platform supports the \"WE BUILD\" campaign aiming to raise KES 1.2 billion over 15 years by mobilizing 55,000 \"builders\" to support solidarity-driven enterprises in Kenya's creative sector.\n\n## Tech Stack\n- **Frontend**: React + TypeScript + Wouter (routing) + TailwindCSS + Shadcn UI\n- **Backend**: Express.js + TypeScript\n- **Payment**: Paystack (supports African payment methods)\n- **Storage**: In-memory (MemStorage) for MVP\n- **Design**: Kenya flag-inspired colors (deep green #1B4332, warm red #D32F2F)\n\n## Application Structure\n\n### Pages\n1. **Home (/)** - Landing page with:\n   - Hero section with campaign progress tracker\n   - 3 donation pathway cards (One-Time, Become a Builder, Partner with Us)\n   - 6 builder tier cards (Palladium 25K, Platinum 20K, Gold 10K, Diamond 5K, Silver 2K, Bronze 1K)\n   - Statistics showcase\n   - SESS model diagram\n   - Impact stories\n   - FAQ section\n   - Contact form\n\n2. **About (/about)** - Mission and campaign details:\n   - JENGE mission\n   - SESS model explanation\n   - WE BUILD campaign overview\n   - Kenya creative sector context\n\n3. **Donate (/donate)** - Payment page:\n   - Donation type selection (one-time vs builder)\n   - Builder tier selection\n   - Donor information form\n   - Paystack payment integration\n\n### Key Features\n- **Campaign Progress Tracker**: Shows KES 1,520,000 pledged of KES 20M Milestone 1 goal with countdown timer\n- **Builder Tiers**: 6 annual commitment tiers from Bronze (1K) to Palladium (25K) for 15 years\n- **Paystack Integration**: Initialize payment → verify callback → update donation status\n- **Dark Mode**: Full support with theme toggle\n- **Responsive Design**: Mobile-first approach\n\n### Payment Flow\n1. User fills donation form on /donate page\n2. Frontend calls POST /api/donations/initialize\n3. Backend creates donation record and calls Paystack API\n4. Backend updates donation with Paystack reference\n5. User redirected to Paystack payment page\n6. Paystack calls GET /api/donations/verify callback\n7. Backend verifies with Paystack and updates status\n8. For builder tiers: creates pledge record\n9. User redirected to home with success/failure message\n\n### API Endpoints\n- `POST /api/donations/initialize` - Initialize Paystack payment\n- `GET /api/donations/verify` - Verify Paystack callback\n- `GET /api/campaign/stats` - Get campaign statistics\n- `POST /api/inquiries` - Submit contact form\n- `GET /api/stories` - Get impact stories\n\n### Design Guidelines\n- Colors defined in design_guidelines.md\n- Kenya-inspired visual identity\n- Professional nonprofit aesthetic\n- High contrast for accessibility\n- Consistent spacing and typography\n\n## Current Status\n✅ All pages implemented and styled\n✅ Paystack integration working correctly\n✅ Campaign progress tracking functional\n✅ Builder tier system implemented\n✅ Contact form operational\n✅ Dark mode fully supported\n✅ Architect approved implementation\n","size_bytes":3067},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    // h-9 to match icon buttons and default buttons.\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":844},"client/src/hooks/use-campaign-stats.ts":{"content":"import { useQuery } from \"@tanstack/react-query\";\n\ninterface CampaignStats {\n  pledged: number;\n  goal: number;\n  builders: number;\n  deadline?: string;\n}\n\nexport function useCampaignStats() {\n  return useQuery<CampaignStats>({\n    queryKey: ['campaign-stats'],\n    queryFn: async () => {\n      const response = await fetch('/campaign-stats.json');\n      if (!response.ok) throw new Error('Failed to fetch campaign stats');\n      return response.json();\n    },\n    refetchInterval: 60000, // Refetch every minute\n  });\n}\n","size_bytes":521},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"server/storage.ts":{"content":"import {\n  type Donation,\n  type InsertDonation,\n  type BuilderPledge,\n  type InsertBuilderPledge,\n  type Inquiry,\n  type InsertInquiry,\n  type Story,\n  type InsertStory,\n} from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\nexport interface IStorage {\n  // Donations\n  createDonation(donation: InsertDonation): Promise<Donation>;\n  getDonation(id: string): Promise<Donation | undefined>;\n  getDonationByReference(reference: string): Promise<Donation | undefined>;\n  updateDonationStatus(id: string, status: string): Promise<Donation>;\n  updateDonationReference(id: string, reference: string): Promise<Donation>;\n  getAllDonations(): Promise<Donation[]>;\n  getDonationStats(): Promise<{ total: number; pledged: number; builders: number }>;\n\n  // Builder Pledges\n  createBuilderPledge(pledge: InsertBuilderPledge): Promise<BuilderPledge>;\n  getBuilderPledge(id: string): Promise<BuilderPledge | undefined>;\n  getAllBuilderPledges(): Promise<BuilderPledge[]>;\n\n  // Inquiries\n  createInquiry(inquiry: InsertInquiry): Promise<Inquiry>;\n  getAllInquiries(): Promise<Inquiry[]>;\n\n  // Stories\n  createStory(story: InsertStory): Promise<Story>;\n  getAllStories(): Promise<Story[]>;\n}\n\nexport class MemStorage implements IStorage {\n  private donations: Map<string, Donation>;\n  private builderPledges: Map<string, BuilderPledge>;\n  private inquiries: Map<string, Inquiry>;\n  private stories: Map<string, Story>;\n\n  constructor() {\n    this.donations = new Map();\n    this.builderPledges = new Map();\n    this.inquiries = new Map();\n    this.stories = new Map();\n\n    // Seed some initial data\n    this.seedInitialData();\n  }\n\n  private seedInitialData() {\n    // Add some sample donations to show progress\n    const sampleDonations: Donation[] = [\n      {\n        id: randomUUID(),\n        donorName: \"Jane Kamau\",\n        donorEmail: \"jane@example.com\",\n        amount: 25000,\n        donationType: \"builder\",\n        builderTier: \"palladium\",\n        isRecurring: true,\n        paystackReference: \"ref_001\",\n        status: \"success\",\n        createdAt: new Date(),\n      },\n      {\n        id: randomUUID(),\n        donorName: \"David Ochieng\",\n        donorEmail: \"david@example.com\",\n        amount: 10000,\n        donationType: \"builder\",\n        builderTier: \"gold\",\n        isRecurring: true,\n        paystackReference: \"ref_002\",\n        status: \"success\",\n        createdAt: new Date(),\n      },\n    ];\n\n    sampleDonations.forEach(donation => this.donations.set(donation.id, donation));\n  }\n\n  // Donations\n  async createDonation(insertDonation: InsertDonation): Promise<Donation> {\n    const id = randomUUID();\n    const donation: Donation = {\n      ...insertDonation,\n      id,\n      createdAt: new Date(),\n    };\n    this.donations.set(id, donation);\n    return donation;\n  }\n\n  async getDonation(id: string): Promise<Donation | undefined> {\n    return this.donations.get(id);\n  }\n\n  async getDonationByReference(reference: string): Promise<Donation | undefined> {\n    return Array.from(this.donations.values()).find(\n      (donation) => donation.paystackReference === reference\n    );\n  }\n\n  async updateDonationStatus(id: string, status: string): Promise<Donation> {\n    const donation = this.donations.get(id);\n    if (!donation) throw new Error(\"Donation not found\");\n    \n    const updated = { ...donation, status };\n    this.donations.set(id, updated);\n    return updated;\n  }\n\n  async updateDonationReference(id: string, reference: string): Promise<Donation> {\n    const donation = this.donations.get(id);\n    if (!donation) throw new Error(\"Donation not found\");\n    \n    const updated = { ...donation, paystackReference: reference };\n    this.donations.set(id, updated);\n    return updated;\n  }\n\n  async getAllDonations(): Promise<Donation[]> {\n    return Array.from(this.donations.values());\n  }\n\n  async getDonationStats(): Promise<{ total: number; pledged: number; builders: number }> {\n    const allDonations = Array.from(this.donations.values());\n    const successfulDonations = allDonations.filter(d => d.status === 'success');\n    \n    const pledged = successfulDonations.reduce((sum, d) => sum + d.amount, 0);\n    const builders = new Set(\n      successfulDonations\n        .filter(d => d.donationType === 'builder')\n        .map(d => d.donorEmail)\n    ).size;\n\n    return {\n      total: successfulDonations.length,\n      pledged,\n      builders,\n    };\n  }\n\n  // Builder Pledges\n  async createBuilderPledge(insertPledge: InsertBuilderPledge): Promise<BuilderPledge> {\n    const id = randomUUID();\n    const pledge: BuilderPledge = {\n      ...insertPledge,\n      id,\n      createdAt: new Date(),\n    };\n    this.builderPledges.set(id, pledge);\n    return pledge;\n  }\n\n  async getBuilderPledge(id: string): Promise<BuilderPledge | undefined> {\n    return this.builderPledges.get(id);\n  }\n\n  async getAllBuilderPledges(): Promise<BuilderPledge[]> {\n    return Array.from(this.builderPledges.values());\n  }\n\n  // Inquiries\n  async createInquiry(insertInquiry: InsertInquiry): Promise<Inquiry> {\n    const id = randomUUID();\n    const inquiry: Inquiry = {\n      ...insertInquiry,\n      id,\n      createdAt: new Date(),\n    };\n    this.inquiries.set(id, inquiry);\n    return inquiry;\n  }\n\n  async getAllInquiries(): Promise<Inquiry[]> {\n    return Array.from(this.inquiries.values());\n  }\n\n  // Stories\n  async createStory(insertStory: InsertStory): Promise<Story> {\n    const id = randomUUID();\n    const story: Story = {\n      ...insertStory,\n      id,\n      createdAt: new Date(),\n    };\n    this.stories.set(id, story);\n    return story;\n  }\n\n  async getAllStories(): Promise<Story[]> {\n    return Array.from(this.stories.values());\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":5712},"DEPLOYMENT.md":{"content":"# Deploying JENGE Impact Fund to GitHub Pages\n\nThis guide explains how to deploy the JENGE Impact Fund donation platform as a static site on GitHub Pages.\n\n## Prerequisites\n\n- Node.js 20+ installed\n- GitHub repository created\n- Paystack account with public key\n\n## Build for GitHub Pages\n\n### Step 1: Build the Static Site\n\n```bash\nnpm run build:static\n```\n\nThis creates optimized static files in the `dist/public` directory.\n\n### Step 2: Copy Static Data Files\n\nThe build process needs these static JSON files in the output directory:\n\n```bash\ncp client/public/campaign-stats.json dist/public/\ncp client/public/stories.json dist/public/\n```\n\n### Step 3: Configure Environment Variables\n\nCreate a `.env.production` file with your Paystack public key:\n\n```bash\nVITE_PAYSTACK_PUBLIC_KEY=pk_live_your_actual_key_here\n```\n\nFor testing, you can use the test key:\n```bash\nVITE_PAYSTACK_PUBLIC_KEY=pk_test_your_test_key_here\n```\n\n### Step 4: Update Campaign Stats\n\nTo update the campaign progress, edit `client/public/campaign-stats.json`:\n\n```json\n{\n  \"pledged\": 1520000,\n  \"goal\": 20000000,\n  \"builders\": 42\n}\n```\n\nThen rebuild and redeploy.\n\n## Deploy to GitHub Pages\n\n### Option 1: Using GitHub Actions (Recommended)\n\n1. Create `.github/workflows/deploy.yml`:\n\n```yaml\nname: Deploy to GitHub Pages\n\non:\n  push:\n    branches: [ main ]\n  workflow_dispatch:\n\npermissions:\n  contents: read\n  pages: write\n  id-token: write\n\njobs:\n  build-and-deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n      \n      - name: Setup Node.js\n        uses: actions/setup-node@v4\n        with:\n          node-version: '20'\n          \n      - name: Install dependencies\n        run: npm ci\n        \n      - name: Build\n        run: npm run build:static\n        env:\n          VITE_PAYSTACK_PUBLIC_KEY: ${{ secrets.VITE_PAYSTACK_PUBLIC_KEY }}\n        \n      - name: Copy static files\n        run: |\n          cp client/public/campaign-stats.json dist/public/\n          cp client/public/stories.json dist/public/\n          \n      - name: Upload artifact\n        uses: actions/upload-pages-artifact@v2\n        with:\n          path: ./dist/public\n          \n      - name: Deploy to GitHub Pages\n        uses: actions/deploy-pages@v2\n```\n\n2. Add your Paystack public key to GitHub Secrets:\n   - Go to repository Settings → Secrets and variables → Actions\n   - Add `VITE_PAYSTACK_PUBLIC_KEY` with your public key\n\n3. Enable GitHub Pages:\n   - Go to Settings → Pages\n   - Source: GitHub Actions\n\n### Option 2: Manual Deployment\n\n1. Build the site locally:\n```bash\nnpm run build:static\ncp client/public/*.json dist/public/\n```\n\n2. Push the `dist/public` folder to `gh-pages` branch:\n```bash\ngit subtree push --prefix dist/public origin gh-pages\n```\n\n3. Enable GitHub Pages from the `gh-pages` branch in repository settings.\n\n## Features Working in Static Mode\n\n✅ **Working:**\n- All pages (Home, About, Donate)\n- Campaign progress tracking (from static JSON)\n- Paystack Inline payments (client-side)\n- Contact form (via Formspree)\n- Dark mode toggle\n- Responsive design\n- Hash-based routing\n\n❌ **Not Available (requires backend):**\n- Real-time campaign stats updates\n- Payment verification and automated pledge creation\n- Server-side payment processing\n\n## Updating Campaign Data\n\nTo update the campaign statistics:\n\n1. Edit `client/public/campaign-stats.json`\n2. Commit and push changes\n3. GitHub Actions will automatically rebuild and redeploy\n\n## Custom Domain (Optional)\n\n1. Add a `CNAME` file to `client/public/` with your domain:\n```\ndonate.jengeimpact.org\n```\n\n2. Configure DNS:\n   - Add CNAME record pointing to `yourusername.github.io`\n   - Enable HTTPS in GitHub Pages settings\n\n## Troubleshooting\n\n**Issue: Payments not working**\n- Verify `VITE_PAYSTACK_PUBLIC_KEY` is set correctly\n- Check browser console for Paystack script loading\n- Ensure using correct key (test vs live)\n\n**Issue: Pages return 404**\n- Verify hash routing is working (#/ in URLs)\n- Check that all routes use the hash location hook\n\n**Issue: Contact form not working**\n- Verify Formspree endpoint is correct\n- Check network tab for submission errors\n\n## Contact Form Setup\n\nThe contact form uses Formspree. To use your own:\n\n1. Sign up at https://formspree.io\n2. Create a new form\n3. Update the endpoint in `client/src/components/contact-form.tsx`:\n```typescript\nconst response = await fetch(\"https://formspree.io/f/YOUR_FORM_ID\", {\n```\n\n## Support\n\nFor issues or questions:\n- GitHub Issues: [Your Repo URL]\n- Email: info@jengeimpact.org\n","size_bytes":4526},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263}},"version":2}